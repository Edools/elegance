{"version":3,"sources":["theme.base.min.js","app.js","blazy.js","categoryList.js","chat.js","checkout.js","ckeditor.js","colaborativeDiscussion.js","datepicker.js","examQuestionForm.js","fixOnScroll.js","follow.js","lessonList.js","lessonPage.js","mask.js","notepad.js","pagarme.js","postsForm.js","readmore.js","simpleEditor.js","studentDoubts.js","timezone.js","main.js"],"names":["window","app","bindGlobal","FastClick","attach","document","body","$","timeago","trigger","bindOpenOnLoad","toOpen","length","each","i","elem","open","attr","bindTooltips","tooltip","selector","checkFormValidity","event","form","currentTarget","submitButton","find","checkValidity","removeAttr","init","pagarme","bindBlazy","bindMasks","bindReadMore","bindDatepicker","bindFixOnScroll","ckeditor","bindCkeditor","bindCheckout","lessonList","chat","studentDoubts","notepad","categoryList","bindExamQuestionForm","changeTimeZone","followBind","lessonPage","bindPostsForm","on","bindCollaborativeDiscussion","e","Blazy","self","this","$categoryList","isActive","data","bindClicks","expandParents","expandParent","parent","$parent","animate","$nextListGroup","first","$parentCategoryItem","stop","slideToggle","toggle","toggleClass","$loopItem","parents","groupsPagination","page","perPage","totalPages","collaboratorsPagination","followsPagination","$chat","$groups","$roomTitle","$roomUsersCount","$text","$messagesContainer","$messagesScroll","$sendForm","$loadMoreGroupsButton","$loadMoreCollaboratorsButton","$loadMoreStudentsButton","$generalChatGroup","user","schoolId","apiKey","userId","id","chatType","chatLesson","bindScroll","empty","keyup","code","keyCode","which","shiftKey","submitMessage","simpleEditor","firebase","apps","initializeApp","CHAT_CONFIG","database","authenticate","lessonRoomUsers","ref","hide","changeRoom","registerCurrentUser","loadRoomOnlineUsers","off","userFirebase","remove","loadSchoolGroup","loadGroups","loadCollaborators","loadFollows","listenConnectionChanges","ajax","url","CHAT_FIREBASE_SERVICE_HOST","method","headers","Authorization","success","auth","signInWithCustomToken","firebase_token","then","response","monitorConnectionState","error","console","userRef","child","uid","snap","val","onDisconnect","set","onIdle","onAway","onBack","connectionsRef","updateStatus","key","status","$element","orderByChild","equalTo","Number","once","snapshot","hasChildren","forEach","height","parentHeight","isPercentHeight","indexOf","replace","chatHeight","scrollbar","sanitizeHtml","$root","children","el","$el","tagName","last","get","pad","n","preventDefault","$html","text","html","focus","date","Date","messages","push","name","first_name","avatar_url","cover_image_url","timestamp","moment","unix","schedule","getHours","getMinutes","scrollToEnd","scrollTop","scrollHeight","renderMessage","renderTemplate","avatar","format","append","liquid","template","Liquid","parse","render","loadMessages","setMessage","bind","limitToLast","setUser","removeUser","CORE_HOST","is_school","prepend","total_pages","groups","_","sortBy","map","g","group","selectFirstRoomAvailable","addProfileItems","collaborators","users","divClass","removeClass","roomName","description","addClass","ids","parseInt","sort","$selectedRoom","click","change","is","src","loadAsset","config","language","skin","index","ckeditorObj","placeholder","CKEDITOR","bindCkeditorSubmit","editor","$editor","$form","editorId","$submitButton","instances","getData","commentId","$comment","fn","datepicker","defaults","$hidden","insertBefore","frontDate","utc","serverDate","$question","optionIndex","assertionId","hasClass","innerWidth","wrap","$wrapper","offset","size","width","outerWidth","outerHeight","top","css","position","left","z-index","mouseenter","mouseleave","courseTreeExists","courseTree","course","enrollment","courseContent","userType","lessonActions","downloadAction","currentLessonId","translations","lessonProgress","completed","handleLessons","loadTopModules","bindChangeLesson","$mediaControls","enrollmentId","enrollment_id","progressIcon","requirementsExists","$item","content_id","checkLessonCompleted","lazyLoadButtons","lessons","currentLesson","toggleButton","lessonListPanel","type","iconType","progress","cb","requirementsElements","filter","item","requirementsUnified","idx","requirements","toArray","exists","lesson_id","lessons_progresses","bindChangeLessonActive","course_path_regex","lesson_path_regex","path","location","pathname","lesson_path","test","path_array","split","changeLesson","target","stopPropagation","loadChildren","toggleSidebar","getLessonIcon","lesson","lessonIcon","activity","media","getContentPath","content","courseId","getContentDownloadPath","checkLessonAvailability","releaseAt","release_at","releaseAfter","release_after","enrollmentActivatedAt","activated_at","releaseTime","add","checkTrialByType","$tree","constrains_name","payment_method","constrains_tree","trial_constrains","constrains","hasOwnProperty","fetchModules","level","$list","res","modules","course_modules","m","module","allModules","available","course_content_ids","$modules","fetchChildren","courseContents","course_contents","lessons_info","$courseContents","active","hideInProgressIcon","hideCompletedIcon","lessonReleased","releaseType","releaseDate","requirements_ids","in_progress","JSON","stringify","title","views","max_attendance_length","max_attendance_type","translation","zone","tz","guess","downloadable","checkNextButtonUnlocked","topModules","x","parent_course_module","disabled","prev","fadeOut","fadeIn","expandParentModules","parent_modules_hash","opacity","appendTo","when","slideDown","slideUp","originalEvent","$new","direction","$targetLesson","$prev","prevAll","$next","nextAll","parentModules","loopModule","course_module","parent_module","reverse","async","eachSeries","moduleId","$module","REGEX_COLLABORATIVE_DISCUSSIONS","REGEX_EXAM_ANSWERS","isCollaborativeDiscuttion","value","isExamAnswer","ajaxSuccess","xhr","settings","$currentItemIcon","phoneMaskBehavior","phoneMaskOptions","onKeyPress","field","options","mask","apply","arguments","noteContainer","loadNote","saveNote","note","note_id","$button","buttonLabel","prop","_id","buildCreditCard","creditCard","PagarMe","expiration","cardExpirationMonth","cardExpirationYear","cardHolderName","cardNumber","cardCVV","submitFormCreditCardHash","paymentForm","fieldErrors","hasErrors","log","creditCardTest","generateHash","cardHash","submit","pagarmeKey","encryption_key","post","speed","collapsedHeight","moreText","lessText","currHeight","innerHeight","showLink","readmore","moreLink","lessLink","createShortcut","bindKey","callback","isMac","navigator","platform","toUpperCase","bindFunction","character","String","fromCharCode","ctrl","ctrlKey","meta","metaKey","score","handleDrag","handleDrop","clientX","y","clientY","file","dataTransfer","files","URLObj","URL","webkitURL","source","createObjectURL","match","img","createElement","caretPositionFromPoint","pos","range","createRange","setStart","offsetNode","collapse","insertNode","caretRangeFromPoint","updateButtons","bold","queryCommandState","italic","underline","container","$container","$input","$btnAction","registerTriggers","registerDropZone","registerShortcuts","action","execCommand","dropZone","doubtsContainer","expandButton","hideButton","loadMoreButton","loadDoubts","per_page","complete","$btn","time","ready"],"mappings":"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","file":"theme.base.min.js","sourcesContent":["'use strict';\n\n(function () {\n  'use strict';\n\n  window.app = {\n    bindGlobal: function bindGlobal() {\n      FastClick.attach(document.body);\n\n      $('.timeago').timeago();\n\n      $(document).trigger('app:bind:global');\n    },\n\n    bindOpenOnLoad: function bindOpenOnLoad() {\n      var toOpen = $('.js-open-on-load');\n      if (toOpen.length > 0) {\n        $.each(toOpen, function (i, elem) {\n          window.open($(elem).attr('href'));\n        });\n      }\n\n      $(document).trigger('app:bind:open_on_load');\n    },\n\n    bindTooltips: function bindTooltips() {\n      $(\"body\").tooltip(\"destroy\").tooltip({\n        selector: '[data-toggle=\"tooltip\"]'\n      });\n\n      $(document).trigger('app:bind:tooltips');\n    },\n\n    checkFormValidity: function checkFormValidity(event) {\n      var form = event.currentTarget;\n      var submitButton = $(form).find('button[type=\"submit\"]');\n\n      if (form.checkValidity()) {\n        submitButton.removeAttr('disabled');\n      } else {\n        submitButton.attr('disabled', 'disabled');\n      }\n\n      $(document).trigger('app:bind:check_form_validity');\n    },\n\n    init: function init() {\n      app.pagarme.init();\n\n      app.bindGlobal();\n      app.bindBlazy();\n      app.bindOpenOnLoad();\n      app.bindMasks();\n      app.bindTooltips();\n      app.bindReadMore();\n      app.bindDatepicker();\n      app.bindFixOnScroll();\n      app.ckeditor.bindCkeditor();\n      app.bindCheckout();\n      app.lessonList.init();\n      app.chat.init();\n      app.studentDoubts.init();\n      app.notepad.init();\n      app.categoryList.init();\n      app.bindExamQuestionForm();\n      app.changeTimeZone();\n      app.followBind();\n      app.lessonPage();\n      app.bindPostsForm();\n\n      $(document).on('app:bind:ckeditor_submit', app.bindCollaborativeDiscussion);\n    }\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindBlazy = function (e) {\n    new Blazy();\n\n    $(document).trigger('app:bind:blazy');\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.categoryList = {\n    init: function init() {\n      var self = this;\n      self.$categoryList = $('#js-category-list');\n\n      if (self.$categoryList.length == 0) return;\n\n      self.isActive = self.$categoryList.data('is-active') || self.isActive;\n\n      if (!self.isActive) {\n        self.bindClicks();\n        self.$categoryList.attr('data-is-active', true);\n        self.isActive = true;\n      }\n\n      self.expandParents();\n    },\n\n    bindClicks: function bindClicks() {\n      var self = this;\n\n      $(document).on('click', '#js-category-list .category-item .toggle-btn', function () {\n        self.expandParent($(this).parent('.category-item'), true);\n      });\n    },\n\n    expandParent: function expandParent($parent, animate) {\n      var $nextListGroup = $parent.find('.list-group').first();\n      var $parentCategoryItem = $parent;\n\n      if (animate) {\n        $nextListGroup.stop().slideToggle('fast');\n      } else {\n        $nextListGroup.stop().toggle();\n      }\n\n      $parentCategoryItem.toggleClass('expanded');\n    },\n\n    expandParents: function expandParents() {\n      var self = this;\n      var $loopItem = self.$categoryList.find('.category-item.current').first();\n\n      while ($loopItem) {\n        self.expandParent($loopItem, false);\n\n        var $parent = $loopItem.parents('.category-item').first();\n\n        if ($parent.length > 0) {\n          $loopItem = $parent;\n        } else {\n          $loopItem = null;\n        }\n      }\n    }\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.chat = {\n    groupsPagination: {\n      page: 0,\n      perPage: 5,\n      totalPages: 0\n    },\n    collaboratorsPagination: {\n      page: 0,\n      perPage: 5,\n      totalPages: 0\n    },\n    followsPagination: {\n      page: 0,\n      perPage: 5,\n      totalPages: 0\n    },\n\n    init: function init() {\n      var self = this;\n\n      self.$chat = $('.js-chat');\n      self.$groups = $('.js-groups');\n      self.$roomTitle = $('#js-room-title');\n      self.$roomUsersCount = $('#js-room-users-count');\n      self.$text = $('.js-chat-text');\n      self.$messagesContainer = $('.js-chat-messages .js-content');\n      self.$messagesScroll = $('.js-chat-messages .js-scroll');\n      self.$sendForm = $('#js-send-messages');\n      self.$loadMoreGroupsButton = self.$chat.find('.js-load-more-groups');\n      self.$loadMoreCollaboratorsButton = self.$chat.find('.js-load-more-collaborators');\n      self.$loadMoreStudentsButton = self.$chat.find('.js-load-more-students');\n      self.$generalChatGroup = self.$chat.find('.js-chat-group-general');\n\n      self.user = self.$chat.data('user');\n      self.schoolId = self.$chat.data('school-id');\n      self.apiKey = self.$chat.data('api-key');\n      self.userId = self.user.id;\n      self.chatType = self.$chat.data('type');\n      self.chatLesson = self.$chat.data('lesson');\n\n      if (self.$chat.length <= 0) return;\n\n      self.bindScroll();\n\n      self.$messagesContainer.empty();\n\n      // bind form\n      self.$text.keyup(function (e) {\n        var code = e.keyCode ? e.keyCode : e.which;\n        if (code === 13 && !e.shiftKey) {\n          self.submitMessage(e);\n        }\n      });\n\n      app.simpleEditor.init('#js-send-messages');\n      self.$sendForm.on('submit', self.submitMessage);\n\n      if (firebase.apps.length <= 0) {\n        firebase.initializeApp(window.CHAT_CONFIG);\n      }\n\n      self.database = firebase.database();\n\n      self.authenticate();\n\n      if (self.chatType === 'lesson-chat') {\n        self.lessonRoomUsers = self.database.ref('lesson_room_users/' + self.chatLesson.id);\n        self.$loadMoreStudentsButton.hide();\n        self.changeRoom(null);\n        self.registerCurrentUser();\n        self.loadRoomOnlineUsers();\n\n        $(document).off('page:before-change').on('page:before-change', function () {\n          if (self.userFirebase) {\n            self.userFirebase.remove();\n          }\n        });\n      } else {\n        self.loadSchoolGroup();\n        self.loadGroups();\n        self.loadCollaborators();\n        self.loadFollows();\n\n        self.$loadMoreGroupsButton.on('click', function () {\n          self.loadGroups();\n        });\n\n        self.$loadMoreCollaboratorsButton.on('click', function () {\n          self.loadCollaborators();\n        });\n\n        self.$loadMoreStudentsButton.on('click', function () {\n          self.loadFollows();\n        });\n\n        self.$generalChatGroup.on('click', function () {\n          self.changeRoom({\n            currentTarget: self.$generalChatGroup\n          });\n        });\n      }\n\n      self.listenConnectionChanges();\n    },\n\n    authenticate: function authenticate() {\n      var self = app.chat;\n\n      $.ajax({\n        url: window.CHAT_FIREBASE_SERVICE_HOST + '/authenticate',\n        method: 'POST',\n        headers: {\n          'Authorization': self.apiKey\n        }\n      }).success(function (data) {\n        firebase.auth().signInWithCustomToken(data.body.firebase_token).then(function (response) {\n          self.monitorConnectionState(response);\n        }).catch(function (error) {\n          console.error('Error creating custom token:', error);\n        });\n      }).error(function (error) {\n        console.error('Could not authenticate', error);\n      });\n    },\n\n    monitorConnectionState: function monitorConnectionState(response) {\n      var userRef = firebase.database().ref('user_status').child(response.uid);\n\n      // Monitor connection state on browser tab\n      firebase.database().ref('.info/connected').on('value', function (snap) {\n        if (snap.val()) {\n          // if we lose network then remove this user from the list\n          userRef.onDisconnect().set('offline');\n          // set user's online status\n          userRef.set('online');\n        }\n      });\n\n      document.onIdle = function () {\n        userRef.set('idle');\n      };\n\n      document.onAway = function () {\n        userRef.set('away');\n      };\n\n      document.onBack = function () {\n        userRef.set('online');\n      };\n    },\n\n    listenConnectionChanges: function listenConnectionChanges() {\n      var self = app.chat;\n      var connectionsRef = this.database.ref('user_status');\n\n      connectionsRef.on('child_added', function (data) {\n        self.updateStatus(data.val(), data.key);\n      });\n\n      connectionsRef.on('child_changed', function (data) {\n        self.updateStatus(data.val(), data.key);\n      });\n\n      connectionsRef.on('child_removed', function (data) {\n        self.updateStatus(data.val(), 'offline');\n      });\n    },\n\n    updateStatus: function updateStatus(status, userId) {\n      var self = this;\n\n      var $element = $('*[data-id=\"' + userId + '\"]');\n\n      if (self.chatType === 'lesson-chat') {\n        if (status === 'offline') {\n          if ($element.length) {\n            $element.remove();\n          }\n\n          self.lessonRoomUsers.orderByChild('id').equalTo(Number(userId)).once('value').then(function (snapshot) {\n            if (snapshot.hasChildren()) {\n              snapshot.forEach(function (snap) {\n                self.lessonRoomUsers.child(snap.key).remove();\n              });\n            }\n          });\n        }\n      } else {\n        if ($element.length) {\n          $('.status .icon', $element).first().attr('class', 'icon icon-' + status);\n        }\n      }\n    },\n\n    bindScroll: function bindScroll() {\n      var height = this.$chat.data('height');\n      var parent = this.$chat.data('parent');\n      var parentHeight = parent ? $(parent).height() : $(window).height();\n      var isPercentHeight = height.indexOf('%') > -1;\n      height = Number(height.replace('%', '').replace('px', ''));\n\n      if (isPercentHeight === true) {\n        this.chatHeight = parentHeight / 100 * height;\n      } else {\n        this.chatHeight = height;\n      }\n\n      this.$chat.height(this.chatHeight);\n      this.$chat.find('.js-sidebar-scroll').scrollbar({});\n      this.$chat.find('.js-chat-messages .js-scroll').scrollbar({});\n    },\n\n    sanitizeHtml: function sanitizeHtml($root) {\n      $root.find('div:empty').remove();\n\n      // Removes elements with only '<br/>' children\n      $root.children().each(function (i, el) {\n        var $el = $(el);\n        if (el.tagName !== 'BR' && $el.find('br').length > 0 && $el.find('br').length == $el.children().length) {\n          $el.remove();\n        }\n      });\n\n      // Removes last '<br/>'\n      if ($root.last().get(0).tagName === 'BR') {\n        $root.last().remove();\n      }\n\n      return $root;\n    },\n\n    submitMessage: function submitMessage(event) {\n      event.preventDefault();\n      var self = app.chat;\n\n      var $html = self.sanitizeHtml(self.$text);\n      var text = $html.html();\n\n      if (text.length <= 0) return;\n\n      self.$text.html('').focus();\n\n      function pad(n) {\n        return n < 10 ? '0' + n : n;\n      }\n\n      var date = new Date();\n\n      self.messages.push({\n        id: self.user.id,\n        name: self.user.first_name,\n        avatar_url: self.user.cover_image_url,\n        text: text,\n        timestamp: moment().unix(),\n        schedule: pad(date.getHours()) + ':' + pad(date.getMinutes())\n      });\n    },\n\n    scrollToEnd: function scrollToEnd() {\n      var self = this;\n      self.$messagesScroll.scrollTop(self.$messagesScroll[0].scrollHeight);\n    },\n\n    renderMessage: function renderMessage(data) {\n      var self = app.chat;\n      var html = self.renderTemplate('chat-message', {\n        avatar: data.avatar_url,\n        name: data.name,\n        text: data.text,\n        schedule: moment.unix(data.timestamp).format('LLL')\n      });\n\n      self.$messagesContainer.append(html);\n      self.scrollToEnd();\n    },\n\n    renderTemplate: function renderTemplate(key, data) {\n      var liquid = $('#' + key + '-template').html();\n      var template = Liquid.parse(liquid);\n\n      return template.render(data);\n    },\n\n    loadMessages: function loadMessages() {\n      var self = app.chat;\n      var setMessage = function (data) {\n        self.renderMessage(data.val());\n      }.bind(self);\n\n      self.messages.limitToLast(12).on('child_added', setMessage);\n      self.messages.limitToLast(12).on('child_changed', setMessage);\n    },\n\n    loadRoomOnlineUsers: function loadRoomOnlineUsers() {\n      var self = app.chat;\n      var setUser = function (data) {\n        var $html = $(self.renderTemplate('chat-profile-list-item', data.val()));\n        $('.js-students').append($html);\n      }.bind(self);\n\n      var removeUser = function (data) {\n        $('.js-students [data-id=\"' + data.val().id + '\"]').remove();\n      }.bind(self);\n\n      self.lessonRoomUsers.on('child_added', setUser);\n      self.lessonRoomUsers.on('child_removed', removeUser);\n    },\n\n    loadSchoolGroup: function loadSchoolGroup() {\n      var self = app.chat;\n      $.ajax({\n        url: window.CORE_HOST + '/chat/school_group',\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        }\n      }).success(function (data) {\n        data.is_school = true;\n\n        var $html = $(self.renderTemplate('chat-group-list-item', data));\n        $html.on('click', app.chat.changeRoom);\n        self.$groups.prepend($html);\n      });\n    },\n\n    loadGroups: function loadGroups() {\n      var self = app.chat;\n      self.$loadMoreGroupsButton.attr('disabled', 'disabled');\n\n      $.ajax({\n        url: window.CORE_HOST + '/chat/groups?per_page=' + self.groupsPagination.perPage + '&page=' + (self.groupsPagination.page + 1),\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        }\n      }).success(function (data) {\n        self.groupsPagination.page = self.groupsPagination.page + 1;\n        self.$loadMoreGroupsButton.removeAttr('disabled', 'disabled');\n        self.groupsPagination.totalPages = data.total_pages;\n\n        if (self.groupsPagination.page >= self.groupsPagination.totalPages) {\n          self.$loadMoreGroupsButton.attr('disabled', 'disabled');\n        }\n\n        var groups = data.groups;\n        groups = _.sortBy(groups, { is_school: false });\n        groups = _.map(groups, function (g) {\n          g.is_school = false;\n          return g;\n        });\n\n        groups.forEach(function (group) {\n          var $html = $(self.renderTemplate('chat-group-list-item', group));\n          $html.on('click', app.chat.changeRoom);\n          self.$groups.append($html);\n        });\n\n        self.selectFirstRoomAvailable();\n      });\n    },\n\n    loadCollaborators: function loadCollaborators() {\n      var self = app.chat;\n      self.$loadMoreCollaboratorsButton.attr('disabled', 'disabled');\n\n      $.ajax({\n        url: window.CORE_HOST + '/chat/collaborators?per_page=' + self.collaboratorsPagination.perPage + '&page=' + (self.collaboratorsPagination.page + 1),\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        }\n      }).success(function (data) {\n        self.collaboratorsPagination.page = self.collaboratorsPagination.page + 1;\n        self.$loadMoreCollaboratorsButton.removeAttr('disabled', 'disabled');\n        self.collaboratorsPagination.totalPages = data.total_pages;\n\n        if (self.collaboratorsPagination.page >= self.collaboratorsPagination.totalPages) {\n          self.$loadMoreCollaboratorsButton.attr('disabled', 'disabled');\n        }\n\n        self.addProfileItems(data.collaborators, 'js-team');\n        self.selectFirstRoomAvailable();\n      });\n    },\n\n    loadFollows: function loadFollows() {\n      var self = app.chat;\n      self.$loadMoreStudentsButton.attr('disabled', 'disabled');\n\n      $.ajax({\n        url: window.CORE_HOST + '/chat/follows?per_page=' + self.followsPagination.perPage + '&page=' + (self.followsPagination.page + 1),\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        }\n      }).success(function (data) {\n        self.followsPagination.page = self.followsPagination.page + 1;\n        self.$loadMoreStudentsButton.removeAttr('disabled', 'disabled');\n        self.followsPagination.totalPages = data.total_pages;\n\n        if (self.followsPagination.page >= self.followsPagination.totalPages) {\n          self.$loadMoreStudentsButton.attr('disabled', 'disabled');\n        }\n\n        self.addProfileItems(data.users, 'js-students');\n        self.selectFirstRoomAvailable();\n      });\n    },\n\n    registerCurrentUser: function registerCurrentUser() {\n      var self = this;\n\n      self.lessonRoomUsers.orderByChild('id').equalTo(self.user.id).once('value').then(function (snapshot) {\n        if (!snapshot.hasChildren()) {\n          self.lessonRoomUsers.push(self.user).then(function (snap) {\n            self.userFirebase = snap;\n          });\n        }\n      });\n    },\n\n    addProfileItems: function addProfileItems(users, divClass) {\n      var self = app.chat;\n\n      users.forEach(function (user) {\n        var $html = $(self.renderTemplate('chat-profile-list-item', user));\n        $html.on('click', app.chat.changeRoom);\n        $('.' + divClass).append($html);\n      });\n    },\n\n    changeRoom: function changeRoom(event) {\n      var self = app.chat;\n\n      $('.chat-sidebar-list-item').removeClass('active');\n\n      var roomName = 'messages';\n\n      if (self.chatType === 'lesson-chat') {\n        roomName += '_lessons/' + self.chatLesson.id;\n\n        // change room name on div\n        self.$roomTitle.html(self.chatLesson.description);\n        self.$roomUsersCount.html(0);\n      } else {\n        var $element = $(event.currentTarget);\n        $element.addClass('active');\n\n        if ($element.data('type') === 'products') {\n          // room name on firebase\n          roomName += '_products/' + $element.data('id');\n\n          // change room name on div\n          self.$roomTitle.html($('.js-chat-group-name', $element).html());\n          self.$roomUsersCount.html($('.js-chat-group-users-count', $element).html());\n        } else if ($element.data('type') === 'users') {\n          var ids = [self.userId, parseInt($element.data('id'))].sort();\n          roomName += '_users/' + ids[0] + '/' + ids[1];\n\n          // change room name on div\n          self.$roomTitle.html($('.info .name', $element).html());\n          self.$roomUsersCount.html($('.info .location', $element).html());\n        } else if ($element.data('type') === 'schools') {\n          // room name on firebase\n          roomName += '_schools/' + self.schoolId;\n\n          // change room name on div\n          self.$roomTitle.html($('.js-chat-group-name', $element).html());\n          self.$roomUsersCount.html($('.js-chat-group-users-count', $element).html());\n        }\n      }\n\n      self.$messagesContainer.html('');\n\n      if (self.messages) {\n        self.messages.off();\n      }\n\n      self.messages = self.database.ref(roomName);\n      self.loadMessages();\n    },\n\n    selectFirstRoomAvailable: function selectFirstRoomAvailable() {\n      if (!self.$selectedRoom) {\n        // Select first room\n        self.$selectedRoom = $('.chat-sidebar-list-item').first();\n        self.$selectedRoom.click();\n      }\n    }\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindCheckout = function () {\n    $('#js-terms-of-use-check').change(function () {\n      if ($(this).is(\":checked\") === true) {\n        $('.cta-checkout-cart').removeClass('disabled');\n      } else {\n        $('.cta-checkout-cart').addClass('disabled');\n      }\n    });\n\n    $(document).trigger('app:bind:checkout');\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.ckeditor = {\n    bindCkeditor: function bindCkeditor() {\n      var src = '//cdn.edools.com/libs/ckeditor/4.5.10/ckeditor.js';\n\n      if ($('.js-ckeditor').length) {\n        loadAsset('window.CKEDITOR', src, function () {\n          var config = {\n            language: 'pt-br',\n            skin: 'bootstrapck'\n          };\n\n          $('.js-ckeditor').each(function (index, ckeditorObj) {\n            if (!$('#cke_' + ckeditorObj.id).length) {\n              config.placeholder = ckeditorObj.placeholder; // TODO: fix it\n\n              CKEDITOR.replace(ckeditorObj.id, config);\n            }\n          });\n\n          app.ckeditor.bindCkeditorSubmit();\n          $(document).trigger('app:bind:ckeditor');\n        });\n      }\n    },\n\n    bindCkeditorSubmit: function bindCkeditorSubmit() {\n      $.each($('.js-ckeditor'), function (index, editor) {\n        var $editor = $(editor);\n        var $form = $editor.parents('form');\n        var editorId = $editor.attr('id');\n\n        if ($form) {\n          var $submitButton = $form.find('button[type=\"submit\"]');\n\n          CKEDITOR.instances[editorId].on('change', function () {\n            if (this.getData().length) {\n              $submitButton.attr('disabled', false);\n            } else {\n              $submitButton.attr('disabled', true);\n            }\n          });\n        }\n      });\n\n      $(document).trigger('app:bind:ckeditor_submit');\n    }\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindCollaborativeDiscussion = function () {\n    $(document).on('click', '#collaborative-discussion .js-edit-button', function () {\n      var commentId = $(this).data('comment-id');\n      var $comment = $('#js-comment-' + commentId);\n\n      $comment.find('.js-show-comment').addClass('hide');\n      $comment.find('.js-edit-container').removeClass('hide');\n    });\n\n    $(document).on('click', '#collaborative-discussion .js-cancel-button', function () {\n      var commentId = $(this).data('comment-id');\n      var $comment = $('#js-comment-' + commentId);\n\n      $comment.find('.js-show-comment').removeClass('hide');\n      $comment.find('.js-edit-container').addClass('hide');\n    });\n\n    $(document).trigger('app:bind:collaborative_discussion');\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindDatepicker = function () {\n    // TODO: Handle i18n\n    $.fn.datepicker.defaults.language = 'pt-BR';\n\n    $('.datepicker').each(function (i, el) {\n      var $el = $(el);\n      var $hidden = $('<input type=\"hidden\" />').insertBefore($el.parent());\n      var frontDate = moment($el.val()).utc().format('DD/MM/YYYY');\n      var serverDate = moment($el.val()).utc().format('YYYY-MM-DD');\n      serverDate = serverDate === 'Invalid date' ? null : serverDate;\n\n      $hidden.attr('id', $el.attr('id'));\n      $hidden.attr('name', $el.attr('name'));\n      $hidden.attr('value', serverDate);\n\n      $el.removeAttr('id');\n      $el.removeAttr('name');\n\n      if ($el.val() !== \"\") {\n        $el.val(frontDate);\n      }\n\n      $(el).datepicker().on('change', function () {\n        var date = moment($el.val(), 'DD/MM/YYYY').utc().format('YYYY-MM-DD');\n        date = date === 'Invalid date' ? null : date;\n        $hidden.val(date);\n      });\n    });\n\n    $(document).trigger('app:bind:datepicker');\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindExamQuestionForm = function () {\n    $(document).on('click', '#js-remake-exam', function () {\n      $('#answers-container').addClass('hide');\n      $('#form-container').removeClass('hide');\n    });\n\n    $(document).on('click', '.js-clean-associative-options', function () {\n      $(this).parents('.associative-question').find('.js-associative-select option:selected').removeAttr('selected');\n    });\n\n    $(document).on('change', '.js-associative-select', function () {\n      var $question = $(this).parents('.associative-question');\n      var optionIndex = $(this).data('option-index');\n      var assertionId = $(this).find('option:selected').data('first-assertion-id');\n\n      $question.find('.js-associate-assertion[data-option-index=\"' + optionIndex + '\"]').val(assertionId);\n    });\n\n    // bind all form's inputs\n    $(document).on('change', '#exam_answer_form', app.checkFormValidity);\n    // bind all form's textareas for all types of typing\n    $(document).on('input propertychange', '#exam_answer_form', app.checkFormValidity);\n\n    $(document).trigger('app:bind:bind_exam_question_form');\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindFixOnScroll = function () {\n    $('.js-fix-on-scroll').each(function (i, el) {\n      if (!$(el).hasClass('js-fix-on-scroll-mobile') && window.innerWidth < 992) {\n        return;\n      }\n\n      var $el = $(el);\n      $el.wrap('<div class=\"js-fix-scroll-wrapper\"/>');\n      var $wrapper = $el.parent('.js-fix-scroll-wrapper');\n\n      var offset = $el.offset();\n      var size = {\n        width: $el.outerWidth(),\n        height: $el.outerHeight()\n      };\n\n      $wrapper.width(size.width);\n      $wrapper.height(size.height);\n\n      $(document).on('scroll', function (e) {\n        var scrollTop = $(document).scrollTop();\n\n        if (scrollTop >= offset.top) {\n          if ($el.css('position') === 'fixed') return;\n\n          $el.parent().addClass('scroll');\n          $el.addClass('scroll');\n          $el.css({\n            position: 'fixed',\n            left: offset.left,\n            top: 0,\n            width: size.width,\n            height: size.height,\n            'z-index': '10000'\n          });\n        } else {\n          if ($el.css('position') === 'static') return;\n\n          $el.removeClass('scroll');\n          $el.parent().removeClass('scroll');\n          $el.css({\n            position: 'static',\n            left: 'auto',\n            top: 'auto',\n            width: 'auto',\n            height: 'auto'\n          });\n        }\n      });\n    });\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.followBind = function () {\n    $(document).on({\n      mouseenter: function mouseenter() {\n        $(this).addClass('hidden');\n        $('#js-unfollow').removeClass('hidden');\n      }\n    }, '#js-following');\n\n    $(document).on({\n      mouseleave: function mouseleave() {\n        $('#js-following').removeClass('hidden');\n        $(this).addClass('hidden');\n      }\n    }, '#js-unfollow');\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.lessonList = {\n    init: function init() {\n      var self = this;\n\n      self.courseTreeExists = self.courseTree().length;\n      self.isActive = self.courseTree().data('is-active');\n      self.course = self.courseTree().data('course');\n      self.enrollment = self.courseTree().data('enrollment');\n      self.courseContent = self.courseTree().data('course-content');\n      self.userType = self.courseTree().data('user-type');\n      self.lessonActions = self.courseTree().data('lesson-actions');\n      self.downloadAction = self.courseTree().data('download-action');\n      self.currentLessonId = parseInt(self.courseTree().data('current-lesson-id'));\n      self.apiKey = self.courseTree().data('api-key');\n\n      self.translations = {};\n      self.translations['lesson.release_at'] = self.courseTree().data('translation-release-at');\n      self.translations['lesson.release_after'] = self.courseTree().data('translation-release-after');\n      self.translations['product.course_content.views'] = self.courseTree().data('translation-course_content-views');\n\n      if (self.lessonProgress() && self.lessonProgress().completed) {\n        $('.btn-next-lesson').removeClass('disabled');\n      }\n\n      if (self.courseTreeExists && !self.isActive) {\n        self.bindClicks();\n        self.handleLessons();\n        self.loadTopModules();\n        self.bindChangeLesson();\n\n        $(document).trigger('app:bind:lesson_sidebar');\n\n        $(document).on('lesson-completed', function (event, lessonProgress) {\n          var $mediaControls = $('.btn-next-lesson');\n          var enrollmentId = lessonProgress.data.enrollment_id;\n\n          if (self.progressIcon('completed').hasClass('hide')) {\n            self.progressIcon('completed').removeClass('hide');\n          }\n\n          if (!self.progressIcon('progress').hasClass('hide')) {\n            self.progressIcon('progress').addClass('hide');\n          }\n\n          if ($mediaControls.size() > 0) {\n            $mediaControls.removeClass('disabled');\n          }\n\n          app.lessonList.requirementsExists(lessonProgress.data, function ($item, content_id) {\n            if ($item && content_id) {\n              app.lessonList.checkLessonCompleted(enrollmentId, content_id, function (completed) {\n                if (completed) {\n                  $item.removeClass('blocked');\n                  $item.find('.right > .icon-lock').remove();\n                }\n              });\n            }\n          });\n        });\n      }\n    },\n\n    // Props\n\n    courseTree: function courseTree() {\n      return $('.course-content #js-course-tree-ajax');\n    },\n\n    lazyLoadButtons: function lazyLoadButtons() {\n      return $('.course-content #js-course-content-more-link, .course-content #js-course-content-prev-link');\n    },\n\n    lessons: function lessons() {\n      return this.courseTree().find('.js-content');\n    },\n\n    currentLesson: function currentLesson() {\n      return $(this.courseTree().find('.js-content.active')[0]);\n    },\n\n    toggleButton: function toggleButton() {\n      return $('.lesson-list-toggle .btn');\n    },\n\n    lessonListPanel: function lessonListPanel() {\n      return $('.lesson-list-panel');\n    },\n\n    lessonProgress: function lessonProgress() {\n      return $('#js-media-player').data('lesson-progress');\n    },\n\n    progressIcon: function progressIcon(type) {\n      var iconType = {\n        completed: '.js-completed-icon',\n        progress: '.js-in-progress-icon'\n      };\n\n      return this.currentLesson().find(iconType[type]);\n    },\n\n    requirementsExists: function requirementsExists(lessonProgress, cb) {\n      if (!lessonProgress) {\n        return false;\n      }\n\n      var requirementsElements = $('.lesson-list-panel [data-requirements]').filter(function (index, item) {\n        return $(item).data('requirements').length > 0;\n      });\n\n      var requirementsUnified = requirementsElements.map(function (idx, item) {\n        return {\n          item: $(item),\n          requirements: $(item).data('requirements')\n        };\n      }).toArray();\n\n      var exists = _.find(requirementsUnified, { requirements: [{ content_id: lessonProgress.lesson_id }] });\n\n      if (exists) {\n        var $item = exists.item;\n        if (cb) {\n          return cb($item, lessonProgress.lesson_id);\n        }\n      } else {\n        if (cb) {\n          return cb(null);\n        }\n      }\n    },\n\n    checkLessonCompleted: function checkLessonCompleted(enrollmentId, id, cb) {\n      var self = this;\n      var completed = false;\n      var apiKey = $('.course-content #js-course-tree-ajax').data('api-key');\n\n      $.ajax({\n        url: window.CORE_HOST + '/enrollments/' + enrollmentId + '/lessons_progresses?lesson_id=' + id,\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + apiKey\n        }\n      }).success(function (data) {\n        completed = data.lessons_progresses[0].completed;\n\n        cb(completed);\n      });\n    },\n\n    // Actions\n    bindChangeLesson: function bindChangeLesson() {\n      var self = this;\n\n      if (!self.bindChangeLessonActive) {\n        self.bindChangeLessonActive = true;\n        var course_path_regex = /enrollments\\/\\d+\\/courses\\/\\d+$/;\n        var lesson_path_regex = /enrollments\\/\\d+\\/courses\\/\\d+\\/course_contents\\/\\d+$/;\n\n        $(document).on(\"ready page:load\", function (e) {\n          var path = window.location.pathname;\n          var lesson_path = lesson_path_regex.test(path);\n\n          if (course_path_regex.test(path) || lesson_path) {\n            self.lessons().removeClass('active');\n\n            if (lesson_path) {\n              var path_array = path.split('/');\n              var content_id = path_array[path_array.length - 1];\n\n              $(\"#content-\" + content_id + \".js-content\").addClass('active');\n            }\n          }\n        });\n      }\n    },\n\n    bindClicks: function bindClicks() {\n      var self = this;\n\n      self.lessons().find('a').on('click', function (e) {\n        e.preventDefault();\n        app.lessonList.changeLesson(null, $(this).parents('.js-content'));\n      });\n\n      self.courseTree().on('click', '.module', function (e) {\n        if (!$(e.target).hasClass('module') && !$(e.target).parent().hasClass('module')) {\n          return;\n        }\n\n        e.stopPropagation();\n\n        self.loadChildren($(this));\n      });\n\n      self.courseTree().data('is-active', true);\n\n      self.toggleButton().on('click', this.toggleSidebar);\n    },\n\n    getLessonIcon: function getLessonIcon(lesson) {\n      var lessonIcon = '';\n\n      if (lesson.type === 'ExamLesson' && lesson.activity) {\n        switch (lesson.activity.type) {\n          case 'Quiz':\n            {\n              lessonIcon = 'icon-puzzle';\n              break;\n            }\n          case 'FileUpload':\n            {\n              lessonIcon = 'icon-arrow-up-circle';\n              break;\n            }\n          case 'CollaborativeDiscussion':\n            {\n              lessonIcon = 'icon-people';\n              break;\n            }\n          default:\n            {\n              lessonIcon = 'icon-puzzle';\n            }\n        }\n      } else if (lesson.media) {\n        switch (lesson.media.type) {\n          case 'Video':\n            {\n              lessonIcon = 'icon-camrecorder';\n              break;\n            }\n          case 'Audio':\n            {\n              lessonIcon = 'icon-microphone';\n              break;\n            }\n          case 'Slide':\n            {\n              lessonIcon = 'icon-chart';\n              break;\n            }\n          case 'Document':\n            {\n              lessonIcon = 'icon-doc';\n              break;\n            }\n          case 'Image':\n            {\n              lessonIcon = 'icon-picture';\n              break;\n            }\n          case 'Text':\n            {\n              lessonIcon = 'icon-doc';\n              break;\n            }\n          case 'LiveStream':\n            {\n              lessonIcon = 'icon-control-play';\n              break;\n            }\n          case 'VideoSlide':\n            {\n              lessonIcon = 'icon-film';\n              break;\n            }\n          case 'ScormPackage':\n            {\n              lessonIcon = 'icon-layers';\n              break;\n            }\n          case 'Html':\n            {\n              lessonIcon = 'icon-doc';\n              break;\n            }\n          case 'Html5':\n            {\n              lessonIcon = 'icon-docs';\n              break;\n            }\n          default:\n            {\n              lessonIcon = 'icon-camrecorder';\n            }\n\n        }\n      }\n\n      return lessonIcon;\n    },\n\n    getContentPath: function getContentPath(content) {\n      var self = this;\n\n      var enrollmentId = self.enrollment.id;\n      var courseId = self.course.id;\n\n      var path = enrollmentId ? '/enrollments/' + enrollmentId : '/admin_view';\n      path = path + '/courses/' + courseId + '/course_contents/' + content.id;\n\n      return path;\n    },\n\n    getContentDownloadPath: function getContentDownloadPath(content) {\n      var self = this;\n      return self.getContentPath(content) + '/download';\n    },\n\n    checkLessonAvailability: function checkLessonAvailability(lesson) {\n      var releaseAt = lesson.release_at;\n      var releaseAfter = lesson.release_after;\n\n      if (!releaseAt && !releaseAfter) {\n        return true;\n      }\n\n      var enrollmentActivatedAt = moment(this.enrollment.activated_at);\n\n      var releaseTime = releaseAt ? moment(releaseAt) : enrollmentActivatedAt.add(releaseAfter, 'days');\n\n      return moment() > releaseTime;\n    },\n\n    checkTrialByType: function checkTrialByType(type, id) {\n      var $tree = $('#js-course-tree-ajax');\n      var enrollment = $tree.data('enrollment');\n      var constrains_name = 'trial_' + type + '_ids';\n\n      var payment_method = enrollment && enrollment.payment_method;\n      var constrains_tree = $tree.data('school-product') && $tree.data('school-product').trial_constrains;\n      var constrains = constrains_tree && payment_method && constrains_tree[payment_method];\n\n      if (constrains && !constrains.hasOwnProperty(constrains_name)) {\n        return false;\n      }\n\n      if (enrollment && !enrollment['on_trial?']) {\n        return false;\n      }\n\n      if (constrains_tree && constrains[constrains_name]) {\n        return constrains[constrains_name].indexOf(id) > -1;\n      }\n\n      return false;\n    },\n\n    fetchModules: function fetchModules($parent) {\n      var self = this;\n      var id = $parent.data('id');\n      var level = $parent.data('level');\n      var $list = $parent.find('.list-group').first();\n\n      return $.ajax({\n        url: window.CORE_HOST + '/course_modules/' + id,\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        },\n        success: function success(res) {\n          var modules = _.sortBy(res.course_modules, 'order');\n\n          modules = _.filter(modules, function (m) {\n            var module = _.find(self.allModules, { id: m.id });\n            return module.available !== false && (module.course_content_ids.length > 0 || module.course_modules.length > 0);\n          });\n\n          var $modules = _.map(modules, function (module) {\n            return $('<li class=\"list-group-item module\" ' + 'data-id=\"' + module.id + '\"' + 'data-level=\"' + (level + 1) + '\">' + '<i class=\"icon icon-arrow-right\"></i>' + '<span>' + module.name + '</span>' + '<i class=\"busy busy-xs\"></i>' + '</li>');\n          });\n\n          $list.append($modules);\n        }\n      });\n    },\n\n    fetchChildren: function fetchChildren($parent) {\n      var self = this;\n      var id = $parent.data('id');\n      var level = $parent.data('level');\n      var $list = $parent.find('.list-group').first();\n\n      return $.ajax({\n        url: window.CORE_HOST + '/course_modules/' + id + '/course_contents',\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        },\n        success: function success(res) {\n          var courseContents = _.filter(res.course_contents, function (lesson) {\n            return lesson.available !== false;\n          });\n\n          courseContents = _.sortBy(courseContents, 'order');\n\n          if (self.enrollment) {\n            courseContents = _.map(courseContents, function (content) {\n              content.completed = self.enrollment.lessons_info && self.enrollment.lessons_info.completed.indexOf(content.lesson.id) > -1;\n              return content;\n            });\n          }\n\n          var $courseContents = _.map(courseContents, function (content) {\n            var active = self.currentLessonId === content.lesson.id ? 'active js' : '';\n            var lesson = content.lesson;\n            var lessonIcon = self.getLessonIcon(lesson);\n            var hideInProgressIcon = 'hide';\n            var hideCompletedIcon = 'hide';\n            var lessonReleased = null;\n            var releaseType = null;\n            var releaseDate = null;\n            var progress = null;\n            var requirements = content.requirements;\n            var available = true;\n            var requirements_ids = requirements.map(function (item) {\n              return item.content_id;\n            });\n\n            if (self.enrollment) {\n              lessonReleased = self.checkLessonAvailability(lesson);\n\n              if (self.enrollment.lessons_info && self.enrollment.lessons_info.completed.indexOf(lesson.id) > -1) {\n                hideInProgressIcon = 'hide';\n                hideCompletedIcon = null;\n              } else {\n                if (self.enrollment.lessons_info && self.enrollment.lessons_info.in_progress.indexOf(lesson.id) > -1) {\n                  hideInProgressIcon = null;\n                  hideCompletedIcon = 'hide';\n                } else {\n                  hideInProgressIcon = 'hide';\n                  hideCompletedIcon = 'hide';\n                }\n              }\n\n              if (lesson.release_at) {\n                releaseType = 'release_at';\n                releaseDate = lesson.release_at;\n              } else if (lesson.release_after) {\n                releaseType = 'release_after';\n                releaseDate = moment(self.enrollment.activated_at).add(lesson.release_after, 'days');\n              }\n\n              if (self.lessonActions) {\n                progress = _.find(self.enrollment.lessons_progresses, { lesson_id: lesson.id });\n              }\n            }\n\n            if (self.enrollment) {\n              _.each(requirements_ids, function (id) {\n                var exists = _.find(courseContents, { content_id: id, completed: true });\n\n                if (!exists) {\n                  available = false;\n                }\n              });\n            }\n\n            if (content.completed) {\n              $('.btn-next-lesson').removeClass('disabled');\n            }\n\n            var html = '<li class=\"list-group-item content-lesson js-content list-group-item lesson module-item ' + active + (!available || self.enrollment && self.checkTrialByType('content', content.id) ? ' blocked' : '') + '\" ' + 'id=\"content-' + content.id + '\" ' + 'data-requirements=\\'' + JSON.stringify(requirements) + '\\'' + 'data-id=\"' + content.lesson.id + '\"' + 'data-level=\"1\">' + '<div id=\"lesson-' + lesson.id + '\" class=\"js-lesson content-lesson ' + active + (!lessonReleased ? ' not-released' : '') + '\" data-lesson-id=\"' + lesson.id + '\">' + '<div class=\"class-info\">' + '<div class=\"left\"><i class=\"' + lessonIcon + '\"></i></div>' + '<div class=\"center\">' + (self.lessonActions && lessonReleased ? '<a class=\"lesson-title\" href=\"' + self.getContentPath(content) + '\"><span>' + lesson.title + '</span></a>' : '<span class=\"lesson-title\"><span class=\"disabled\">' + lesson.title + '</span></span>') + '</div>' + '<div class=\"right\">' + (!available || self.enrollment && self.checkTrialByType('content', content.id) ? '<i class=\"icon-lock\"></i>' : '') + '<span class=\"progress-icon js-progress-icons\">' + '<i class=\"icon-check js-completed-icon ' + hideCompletedIcon + '\"></i>' + '<i class=\"icon-clock js-in-progress-icon ' + hideInProgressIcon + '\"></i>' + '</span>';\n\n            if (self.lessonActions) {\n              if (progress && progress.views <= self.enrollment.max_attendance_length && self.enrollment.max_attendance_type == 'attempts') {\n                var translation = self.translations['product.course_content.views'];\n\n                translation = translation.replace('{{ progress.views }}', progress.views);\n                translation = translation.replace('{{ enrollment.max_attendance_length }}', self.enrollment.max_attendance_length);\n\n                html += '<span class=\"lesson-views attempt js-attendance badge\" title=\"' + translation + '\" data-tooltip-placement=\"left\" data-toggle=\"tooltip\">' + '<span>' + progress.views + '/' + self.enrollment.max_attendance_length + '</span>' + '</span>';\n              }\n\n              if (!lessonReleased) {\n                var zone = moment.tz.guess();\n                html += '<span class=\"release-date badge\">' + self.translations['lesson.' + releaseType] + '<span> ' + moment.tz(releaseDate, zone).format('DD/MM/YYYY') + '</span>' + '</span>';\n              }\n\n              if (self.downloadAction && content.downloadable) {\n                html += '<a class=\"download-link\" href=\"' + self.getContentDownloadPath(content) + '\" data-no-turbolink>' + '<i class=\"icon-cloud-download\"></i>' + '</a>';\n              }\n            }\n\n            html += '</div>' + '</div>' + '</li>';\n\n            return $(html);\n          });\n\n          $list.append($courseContents);\n          self.checkNextButtonUnlocked();\n        }\n      });\n    },\n\n    checkNextButtonUnlocked: function checkNextButtonUnlocked() {\n      var lessonProgress = this.lessonProgress();\n\n      app.lessonList.requirementsExists(lessonProgress, function ($item, content_id) {\n        if ($item && content_id) {\n          if (!content_id || !lessonProgress.hasOwnProperty('enrollment_id')) {\n            return;\n          }\n\n          app.lessonList.checkLessonCompleted(lessonProgress.enrollment_id, content_id, function (completed) {\n            if (completed) {\n              $('.btn-next-lesson').removeClass('disabled');\n              $item.removeClass('blocked');\n              $item.find('.right > .icon-lock').remove();\n            }\n          });\n        } else {\n          $('.btn-next-lesson').removeClass('disabled');\n        }\n      });\n    },\n\n    loadTopModules: function loadTopModules() {\n      var self = this;\n\n      if (!self.course) return;\n\n      $.ajax({\n        url: window.CORE_HOST + '/courses/' + self.course.id + '/course_modules',\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        },\n        success: function success(res) {\n          if (!res.course_modules || res.course_modules.length <= 0) return;\n\n          self.allModules = res.course_modules;\n\n          self.topModules = _.filter(res.course_modules, function (x) {\n            return !x.parent_course_module && x.available !== false && (x.course_content_ids.length > 0 || x.course_modules.length > 0);\n          });\n\n          self.topModules = _.sortBy(self.topModules, 'order');\n\n          var $modules = _.map(self.topModules, function (module) {\n            var disabled = self.enrollment && self.checkTrialByType('module', module.id);\n\n            return $('<li class=\"list-group-item module ' + (disabled ? 'disabled' : '') + '\" ' + 'data-id=\"' + module.id + '\"' + 'data-level=\"1\">' + '<i class=\"icon icon-arrow-right\"></i>' + '<span>' + module.name + '</span>' + '<i class=\"busy busy-xs\"></i>' + '</li>');\n          });\n\n          self.courseTree().prev('.course-content-busy').fadeOut('fast', function () {\n            self.courseTree().css('display', 'none');\n            self.courseTree().html($modules);\n            self.courseTree().fadeIn('fast');\n\n            if (self.courseContent) {\n              self.expandParentModules(self.courseContent.parent_modules_hash);\n            }\n          });\n        }\n      });\n    },\n\n    loadChildren: function loadChildren(parent, cb) {\n      var self = this;\n      var $parent = $(parent);\n\n      var id = $parent.data('id');\n      var level = $parent.data('level');\n      var $list = $parent.find('.list-group').first();\n\n      if ($list.length <= 0) {\n        $parent.find('.busy').css({ opacity: 1 });\n        $list = $('<ul class=\"list-group\" style=\"display: none;\"></ul>');\n        $list.appendTo($parent);\n\n        $.when(self.fetchModules($parent), self.fetchChildren($parent)).then(function () {\n          $parent.addClass('expanded');\n          $parent.find('.busy').css({ opacity: 0 });\n\n          $list.slideDown('fast');\n\n          if (typeof cb === 'function') {\n            cb();\n          }\n        });\n      } else {\n        if ($parent.hasClass('expanded')) {\n          $parent.removeClass('expanded');\n          $list.slideUp('fast');\n        } else {\n          $parent.addClass('expanded');\n          $list.slideDown('fast');\n        }\n\n        if (typeof cb === 'function') {\n          cb();\n        }\n      }\n    },\n\n    handleLessons: function handleLessons() {\n      $(document).on('page:load page:restore', function (e) {\n\n        if (!e.originalEvent || !e.originalEvent.data || e.originalEvent.data.length == 0) return;\n\n        var $html = $(e.originalEvent.data[0]);\n        app.lessonList.lessons().each(function (i, el) {\n          var $el = $(el);\n          var $new = $html.find('#' + $el.attr('id'));\n          $el.html($new.html());\n        });\n      });\n    },\n\n    changeLesson: function changeLesson(direction, lesson) {\n      var $targetLesson = $(lesson);\n\n      if (direction === 'prev') {\n        var $prev = app.lessonList.currentLesson().prevAll('.js-content');\n\n        if ($prev.length > 0 && $prev.find('a').length > 0) $targetLesson = $($prev[0]);\n      } else if (direction === 'next') {\n        var $next = app.lessonList.currentLesson().nextAll('.js-content');\n\n        if ($next.length > 0 && $next.find('a').length > 0) $targetLesson = $($next[0]);\n      }\n\n      $targetLesson.find('a')[0].click();\n    },\n\n    expandParentModules: function expandParentModules(parentModules) {\n      var self = this;\n\n      var modules = [];\n      var loopModule = parentModules.course_module;\n      modules.push(loopModule.id);\n\n      while (loopModule.parent_module) {\n        loopModule = loopModule.parent_module;\n        modules.push(loopModule.id);\n      }\n\n      modules = modules.reverse();\n\n      async.eachSeries(modules, function (moduleId, cb) {\n        var $module = $('.module[data-id=\"' + moduleId + '\"]');\n        self.loadChildren($module, cb);\n      });\n    },\n\n    toggleSidebar: function toggleSidebar() {\n      app.lessonList.toggleButton().toggleClass('active');\n      app.lessonList.lessonListPanel().toggleClass('active');\n    }\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.lessonPage = function () {\n    var REGEX_COLLABORATIVE_DISCUSSIONS = /\\/collaborative_discussions\\/([0-9]+)\\/collaborative_comments/;\n    var REGEX_EXAM_ANSWERS = /\\/exam_answers/;\n\n    var isCollaborativeDiscuttion = function isCollaborativeDiscuttion(value) {\n      return REGEX_COLLABORATIVE_DISCUSSIONS.test(value);\n    };\n\n    var isExamAnswer = function isExamAnswer(value) {\n      return REGEX_EXAM_ANSWERS.test(value);\n    };\n\n    $(document).ajaxSuccess(function (event, xhr, settings) {\n      if (isCollaborativeDiscuttion(settings.url) || isExamAnswer(settings.url)) {\n        var lessonProgress = app.lessonList.lessonProgress();\n\n        app.lessonList.requirementsExists(lessonProgress, function ($item, content_id) {\n          if (content_id && lessonProgress.enrollment_id) {\n            app.lessonList.checkLessonCompleted(lessonProgress.enrollment_id, content_id, function (completed) {\n              if (completed) {\n                var $currentItemIcon = app.lessonList.currentLesson().find('.js-in-progress-icon');\n                $currentItemIcon.removeClass('icon-clock');\n                $currentItemIcon.removeClass('js-in-progress-icon');\n                $currentItemIcon.addClass('js-in-completed-icon');\n                $currentItemIcon.addClass('icon-check');\n\n                $('.btn-next-lesson').removeClass('disabled');\n                $item.removeClass('disabled');\n                $item.removeClass('blocked');\n                $item.find('.right > .icon-lock').remove();\n              }\n            });\n          }\n        }, function () {\n          $('.btn-next-lesson').removeClass('disabled');\n        });\n      }\n    });\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindMasks = function () {\n    var phoneMaskBehavior = function phoneMaskBehavior(val) {\n      return val.replace(/\\D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';\n    };\n\n    var phoneMaskOptions = {\n      onKeyPress: function onKeyPress(val, e, field, options) {\n        field.mask(phoneMaskBehavior.apply({}, arguments), options);\n      }\n    };\n\n    $('#user-phone').mask(phoneMaskBehavior, phoneMaskOptions);\n    $('#user-cpf').mask('999.999.999-99');\n    $('#user-cep').mask('99.999-999');\n\n    $(document).trigger('app:bind:masks');\n  };\n})();\n\napp.notepad = {\n  page: 1,\n\n  noteContainer: function noteContainer() {\n    return $('#notepad-container');\n  },\n\n  form: function form() {\n    return $('#js-notepad-form');\n  },\n\n  loadNote: function loadNote(lesson_id, cb) {\n    $.ajax({\n      url: window.location.pathname + '/notepads',\n      method: 'GET',\n      success: function success() {\n        if (typeof cb == 'function') {\n          cb();\n        }\n      }\n    });\n  },\n\n  saveNote: function saveNote(cb) {\n    var note = $(\"#js-note\").html();\n    var note_id = $(\"#js_note_id\").val();\n\n    var $button = $(\"#save_notepad_button\");\n    var buttonLabel = $button.html();\n    $button.html($button.data(\"sending\"));\n    $button.prop('disabled', true);\n\n    $.ajax({\n      url: window.location.pathname + '/notepads',\n      method: 'POST',\n      data: {\n        _id: note_id,\n        note: note\n      },\n      success: function success() {\n        $button.html(buttonLabel);\n        $button.prop('disabled', false);\n        if (typeof cb == 'function') {\n          cb();\n        }\n      }\n    });\n  },\n\n  init: function init() {\n    var self = this;\n    if (this.noteContainer().length <= 0) return;\n    this.loadNote($(\"#lesson_id\").val());\n\n    $(\"#notepad_form\").on('submit', function (event) {\n      event.preventDefault();\n      self.saveNote();\n    });\n  }\n};\n\n(function () {\n  'use strict';\n\n  app.pagarme = {\n    buildCreditCard: function buildCreditCard() {\n      var creditCard = new PagarMe.creditCard();\n      var expiration = $(\"#card-form #card-expiration\").val().split('/');\n\n      creditCard.cardExpirationMonth = parseInt(expiration[0]);\n      creditCard.cardExpirationYear = parseInt(expiration[1]);\n      creditCard.cardHolderName = $(\"#card-form #card-holder-name\").val();\n      creditCard.cardNumber = $(\"#card-form #card-number\").val();\n      creditCard.cardCVV = $(\"#card-form #card-cvc\").val();\n\n      return creditCard;\n    },\n\n    submitFormCreditCardHash: function submitFormCreditCardHash(paymentForm) {\n      var creditCard = app.pagarme.buildCreditCard();\n      var fieldErrors = creditCard.fieldErrors();\n      var hasErrors = false;\n      for (var field in fieldErrors) {\n        hasErrors = true;break;\n      }\n\n      console.log(1);\n      window.creditCardTest = creditCard;\n\n      if (hasErrors) {\n        window.fieldErrors = fieldErrors;\n\n        console.log(window.fieldErrors);\n      } else {\n        creditCard.generateHash(function (cardHash) {\n          $('#card_hash').val(cardHash);\n\n          paymentForm.get(0).submit();\n        });\n      }\n    },\n\n    init: function init() {\n      var src = 'https://assets.pagar.me/js/pagarme.min.js',\n          paymentForm = $('#card-form'),\n          pagarmeKey = $(\"#pagarme\").val();\n\n      if (paymentForm.length && pagarmeKey) {\n        loadAsset('PagarMe', src, function () {\n          PagarMe.encryption_key = pagarmeKey;\n\n          paymentForm.submit(function (event) {\n            event.preventDefault();\n\n            app.pagarme.submitFormCreditCardHash(paymentForm);\n          });\n\n          $(document).trigger('app:bind:pagarme');\n        });\n      }\n    }\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindPostsForm = function () {\n    $(document).on('click', '.js-post-edit', function () {\n      var post = $(this).parents('.js-post');\n\n      post.find('.js-post-body').addClass('hidden');\n      post.find('.js-post-form').removeClass('hidden');\n    });\n\n    $(document).on('click', '.js-post-cancel', function (e) {\n      var post = $(this).parents('.js-post');\n\n      post.find('.js-post-body').removeClass('hidden');\n      post.find('.js-post-form').addClass('hidden');\n    });\n\n    $(document).trigger('app:bind:bind_posts_form');\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.bindReadMore = function () {\n    $('[role=\"readmore\"]').each(function (i, el) {\n      var speed = $(el).data('speed') || 100;\n      var collapsedHeight = $(el).data('collapsed-height') || 200;\n      var moreText = $(el).data('more-text') || 'Leia Mais';\n      var lessText = $(el).data('less-text') || 'Fechar';\n\n      var currHeight = $(el).innerHeight();\n      var showLink = currHeight <= collapsedHeight;\n\n      $(el).readmore({\n        speed: speed,\n        collapsedHeight: collapsedHeight,\n        moreLink: '<a href=\"#\" class=\"' + (showLink ? 'hidden' : 'readmore-link') + '\">' + moreText + '</a>',\n        lessLink: '<a href=\"#\" class=\"' + (showLink ? 'hidden' : 'readmore-link') + '\">' + lessText + '</a>'\n      });\n    });\n  };\n})();\n\n(function () {\n  'use strict';\n\n  app.simpleEditor = {\n\n    createShortcut: function createShortcut(bindKey, callback) {\n      var isMac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n\n      var bindFunction = function bindFunction(e) {\n        var character = String.fromCharCode(e.keyCode);\n        var ctrl = e.ctrlKey;\n        var meta = !!e.metaKey;\n        var score = 0;\n\n        if (isMac && meta) {\n          score++;\n        } else if (ctrl) {\n          score++;\n        }\n\n        if (character == bindKey) {\n          score++;\n        }\n\n        if (score == 2) {\n          e.stopPropagation();\n          e.preventDefault();\n          return callback();\n        }\n      };\n\n      $('body').bind('keydown', bindFunction);\n    },\n\n    handleDrag: function handleDrag(e) {\n      e.stopPropagation();\n      e.preventDefault();\n    },\n\n    handleDrop: function handleDrop(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      var x = e.clientX;\n      var y = e.clientY;\n      var file = e.dataTransfer.files[0];\n\n      var URLObj = window.URL || window.webkitURL;\n      var source = URLObj.createObjectURL(file);\n\n      if (file.type.match('image.*')) {\n\n        var img = document.createElement(\"img\");\n\n        img.src = source;\n\n        if (document.caretPositionFromPoint) {\n          var pos = document.caretPositionFromPoint(x, y);\n          range = document.createRange();\n          range.setStart(pos.offsetNode, pos.offset);\n          range.collapse();\n          range.insertNode(img);\n        } else if (document.caretRangeFromPoint) {\n          range = document.caretRangeFromPoint(x, y);\n          range.insertNode(img);\n        }\n      }\n    },\n\n    updateButtons: function updateButtons() {\n      var bold = document.queryCommandState(\"Bold\");\n      var italic = document.queryCommandState(\"Italic\");\n      var underline = document.queryCommandState(\"Underline\");\n\n      if (bold === true) {\n        $('[data-action=bold]').addClass('active');\n      } else {\n        $('[data-action=bold]').removeClass('active');\n      }\n\n      if (italic === true) {\n        $('[data-action=italic]').addClass('active');\n      } else {\n        $('[data-action=italic]').removeClass('active');\n      }\n\n      if (underline === true) {\n        $('[data-action=underline]').addClass('active');\n      } else {\n        $('[data-action=underline]').removeClass('active');\n      }\n    },\n\n    init: function init(container) {\n      this.$container = $(container);\n\n      this.$input = this.$container.find('.js-input');\n      this.$btnAction = this.$container.find('.js-btn-action');\n\n      this.registerTriggers();\n      this.registerDropZone();\n      this.registerShortcuts();\n    },\n\n    registerTriggers: function registerTriggers() {\n      var self = this;\n\n      self.$btnAction.on('click', function () {\n        var action = $(this).attr('data-action');\n        document.execCommand(action);\n        app.simpleEditor.updateButtons();\n      });\n\n      self.$input.on('click', function () {\n        app.simpleEditor.updateButtons();\n      });\n\n      self.$input.on('focusin', function () {\n        self.$container.addClass('focused');\n      });\n\n      self.$input.on('focusout', function () {\n        self.$container.removeClass('focused');\n      });\n    },\n\n    registerDropZone: function registerDropZone() {\n      var dropZone = $(this.container).find('.js-input');\n      dropZone.on('dragover', app.simpleEditor.handleDrag, false);\n      dropZone.on('drop', app.simpleEditor.handleDrop, false);\n    },\n\n    registerShortcuts: function registerShortcuts() {\n\n      app.simpleEditor.createShortcut('U', function () {\n        document.execCommand('underline');\n        app.simpleEditor.updateButtons();\n      });\n\n      app.simpleEditor.createShortcut('B', function () {\n        document.execCommand('bold');\n        app.simpleEditor.updateButtons();\n      });\n\n      app.simpleEditor.createShortcut('I', function () {\n        document.execCommand('italic');\n        app.simpleEditor.updateButtons();\n      });\n    }\n  };\n})();\n\napp.studentDoubts = {\n  page: 1,\n\n  doubtsContainer: function doubtsContainer() {\n    return $('#js-doubts-container');\n  },\n\n  form: function form() {\n    return $('#js-student-doubts-form');\n  },\n\n  expandButton: function expandButton() {\n    return $('#js-expand-student-doubts-form');\n  },\n\n  hideButton: function hideButton() {\n    return $('#js-hide-student-doubts-form');\n  },\n\n  loadMoreButton: function loadMoreButton() {\n    return $('#js-load-more-doubts');\n  },\n\n  loadDoubts: function loadDoubts(cb) {\n    var self = this;\n\n    $.ajax({\n      url: window.location.pathname + '/student_doubts/page/' + self.page,\n      method: 'GET',\n      data: {\n        per_page: 3\n      },\n      complete: function complete() {\n        if (typeof cb == 'function') {\n          cb();\n        }\n      }\n    });\n  },\n\n  init: function init() {\n    var self = this;\n\n    if (self.doubtsContainer().length <= 0) return;\n\n    self.expandButton().on('click', function () {\n      self.expandButton().hide();\n      self.form().slideDown('fast');\n    });\n\n    self.hideButton().on('click', function () {\n      self.form().slideUp('fast', function () {\n        self.expandButton().fadeIn('fast');\n      });\n    });\n\n    self.loadMoreButton().on('click', function () {\n      self.page = self.page + 1;\n      var $btn = $(this);\n\n      $btn.attr('disabled', 'disabled');\n      self.loadDoubts(function () {\n        $btn.removeAttr('disabled');\n      });\n    });\n\n    self.loadDoubts();\n  }\n};\n\n(function () {\n  'use strict';\n\n  app.changeTimeZone = function () {\n    $('.js-to-client-timezone').each(function (i, el) {\n      var $el = $(el);\n      var format = $el.data('format');\n      var zone = moment.tz.guess();\n      var time = $el.data('timezone');\n\n      $el.html(moment.tz(time, zone).format(format));\n    });\n\n    $(document).trigger('app:change:timezone');\n  };\n\n  // TODO: FIXME: Essa chamada é para funcionar no primeiro load. Não deveria\n  // ser assim, parece ser algum erro com a inserção de cod no tema\n  app.changeTimeZone();\n})();\n\n(function () {\n  $(document).on('page:load', function () {\n    app.init();\n  });\n\n  $(document).on('page:partial-load', function () {\n    app.bindBlazy();\n  });\n\n  $(document).ready(function () {\n    app.init();\n  });\n})();","(function () {\n  'use strict';\n\n  window.app = {\n    bindGlobal: function () {\n      FastClick.attach(document.body);\n\n      $('.timeago').timeago();\n\n      $(document).trigger('app:bind:global');\n    },\n\n    bindOpenOnLoad: function () {\n      var toOpen = $('.js-open-on-load');\n      if (toOpen.length > 0) {\n        $.each(toOpen, function (i, elem) {\n          window.open($(elem).attr('href'));\n        });\n      }\n\n      $(document).trigger('app:bind:open_on_load');\n    },\n\n    bindTooltips: function () {\n      $(\"body\")\n        .tooltip(\"destroy\")\n        .tooltip({\n          selector: '[data-toggle=\"tooltip\"]'\n        });\n\n      $(document).trigger('app:bind:tooltips');\n    },\n\n    checkFormValidity: function (event) {\n      var form = event.currentTarget;\n      var submitButton = $(form).find('button[type=\"submit\"]');\n\n      if (form.checkValidity()) {\n        submitButton.removeAttr('disabled');\n      } else {\n        submitButton.attr('disabled', 'disabled');\n      }\n\n      $(document).trigger('app:bind:check_form_validity');\n    },\n\n    init: function () {\n      app.pagarme.init();\n\n      app.bindGlobal();\n      app.bindBlazy();\n      app.bindOpenOnLoad();\n      app.bindMasks();\n      app.bindTooltips();\n      app.bindReadMore();\n      app.bindDatepicker();\n      app.bindFixOnScroll();\n      app.ckeditor.bindCkeditor();\n      app.bindCheckout();\n      app.lessonList.init();\n      app.chat.init();\n      app.studentDoubts.init();\n      app.notepad.init();\n      app.categoryList.init();\n      app.bindExamQuestionForm();\n      app.changeTimeZone();\n      app.followBind();\n      app.lessonPage();\n      app.bindPostsForm();\n\n      $(document).on('app:bind:ckeditor_submit', app.bindCollaborativeDiscussion);\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  app.bindBlazy = function (e) {\n    new Blazy();\n\n    $(document).trigger('app:bind:blazy');\n  };\n})();\n","(function () {\n  'use strict';\n\n  app.categoryList = {\n    init: function () {\n      var self = this;\n      self.$categoryList = $('#js-category-list');\n\n      if (self.$categoryList.length == 0) return;\n\n      self.isActive = self.$categoryList.data('is-active') || self.isActive;\n\n      if (!self.isActive) {\n        self.bindClicks();\n        self.$categoryList.attr('data-is-active', true);\n        self.isActive = true;\n      }\n\n      self.expandParents();\n    },\n\n    bindClicks: function () {\n      var self = this;\n\n      $(document).on('click', '#js-category-list .category-item .toggle-btn', function () {\n        self.expandParent($(this).parent('.category-item'), true);\n      });\n    },\n\n    expandParent: function ($parent, animate) {\n      var $nextListGroup = $parent.find('.list-group').first();\n      var $parentCategoryItem = $parent;\n\n      if (animate) {\n        $nextListGroup.stop().slideToggle('fast');\n      } else {\n        $nextListGroup.stop().toggle();\n      }\n\n      $parentCategoryItem.toggleClass('expanded');\n    },\n\n    expandParents: function () {\n      var self = this;\n      var $loopItem = self.$categoryList.find('.category-item.current').first();\n\n      while ($loopItem) {\n        self.expandParent($loopItem, false);\n\n        var $parent = $loopItem\n          .parents('.category-item')\n          .first();\n\n        if ($parent.length > 0) {\n          $loopItem = $parent;\n        } else {\n          $loopItem = null;\n        }\n      }\n    }\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  app.chat = {\n    groupsPagination: {\n      page: 0,\n      perPage: 5,\n      totalPages: 0\n    },\n    collaboratorsPagination: {\n      page: 0,\n      perPage: 5,\n      totalPages: 0\n    },\n    followsPagination: {\n      page: 0,\n      perPage: 5,\n      totalPages: 0\n    },\n\n    init: function () {\n      var self = this;\n\n      self.$chat = $('.js-chat');\n      self.$groups = $('.js-groups');\n      self.$roomTitle = $('#js-room-title');\n      self.$roomUsersCount = $('#js-room-users-count');\n      self.$text = $('.js-chat-text');\n      self.$messagesContainer = $('.js-chat-messages .js-content');\n      self.$messagesScroll = $('.js-chat-messages .js-scroll');\n      self.$sendForm = $('#js-send-messages');\n      self.$loadMoreGroupsButton = self.$chat.find('.js-load-more-groups');\n      self.$loadMoreCollaboratorsButton = self.$chat.find('.js-load-more-collaborators');\n      self.$loadMoreStudentsButton = self.$chat.find('.js-load-more-students');\n      self.$generalChatGroup = self.$chat.find('.js-chat-group-general');\n\n      self.user = self.$chat.data('user');\n      self.schoolId = self.$chat.data('school-id');\n      self.apiKey = self.$chat.data('api-key');\n      self.userId = self.user.id;\n      self.chatType = self.$chat.data('type');\n      self.chatLesson = self.$chat.data('lesson');\n\n      if (self.$chat.length <= 0) return;\n\n      self.bindScroll();\n\n      self.$messagesContainer.empty();\n\n      // bind form\n      self.$text.keyup(function (e) {\n        var code = e.keyCode ? e.keyCode : e.which;\n        if (code === 13 && !e.shiftKey) {\n          self.submitMessage(e);\n        }\n      });\n\n      app.simpleEditor.init('#js-send-messages');\n      self.$sendForm.on('submit', self.submitMessage);\n\n      if (firebase.apps.length <= 0) {\n        firebase.initializeApp(window.CHAT_CONFIG);\n      }\n\n      self.database = firebase.database();\n\n      self.authenticate();\n\n      if (self.chatType === 'lesson-chat') {\n        self.lessonRoomUsers = self.database.ref('lesson_room_users/' + self.chatLesson.id);\n        self.$loadMoreStudentsButton.hide();\n        self.changeRoom(null);\n        self.registerCurrentUser();\n        self.loadRoomOnlineUsers();\n\n        $(document).off('page:before-change')\n          .on('page:before-change', function () {\n            if (self.userFirebase) {\n              self.userFirebase.remove();\n            }\n          });\n\n      } else {\n        self.loadSchoolGroup();\n        self.loadGroups();\n        self.loadCollaborators();\n        self.loadFollows();\n\n        self.$loadMoreGroupsButton.on('click', function () {\n          self.loadGroups();\n        });\n\n        self.$loadMoreCollaboratorsButton.on('click', function () {\n          self.loadCollaborators();\n        });\n\n        self.$loadMoreStudentsButton.on('click', function () {\n          self.loadFollows();\n        });\n\n        self.$generalChatGroup.on('click', function () {\n          self.changeRoom({\n            currentTarget: self.$generalChatGroup\n          })\n        });\n      }\n\n      self.listenConnectionChanges();\n    },\n\n    authenticate: function () {\n      var self = app.chat;\n\n      $.ajax({\n        url: window.CHAT_FIREBASE_SERVICE_HOST + '/authenticate',\n        method: 'POST',\n        headers: {\n          'Authorization': self.apiKey\n        }\n      }).success(function (data) {\n        firebase.auth().signInWithCustomToken(data.body.firebase_token)\n          .then(function (response) {\n            self.monitorConnectionState(response);\n          })\n          .catch(function (error) {\n            console.error('Error creating custom token:', error);\n          });\n      }).error(function (error) {\n        console.error('Could not authenticate', error);\n      });\n    },\n\n    monitorConnectionState: function (response) {\n      const userRef = firebase.database().ref('user_status').child(response.uid);\n\n      // Monitor connection state on browser tab\n      firebase.database().ref('.info/connected')\n        .on('value', function (snap) {\n          if (snap.val()) {\n            // if we lose network then remove this user from the list\n            userRef.onDisconnect().set('offline');\n            // set user's online status\n            userRef.set('online');\n          }\n        });\n\n      document.onIdle = function () {\n        userRef.set('idle');\n      };\n\n      document.onAway = function () {\n        userRef.set('away');\n      };\n\n      document.onBack = function () {\n        userRef.set('online');\n      }\n    },\n\n    listenConnectionChanges: function () {\n      var self = app.chat;\n      var connectionsRef = this.database.ref('user_status');\n\n      connectionsRef.on('child_added', function (data) {\n        self.updateStatus(data.val(), data.key);\n      });\n\n      connectionsRef.on('child_changed', function (data) {\n        self.updateStatus(data.val(), data.key);\n      });\n\n      connectionsRef.on('child_removed', function (data) {\n        self.updateStatus(data.val(), 'offline');\n      });\n    },\n\n    updateStatus: function (status, userId) {\n      var self = this;\n\n      var $element = $('*[data-id=\"' + userId + '\"]');\n\n      if (self.chatType === 'lesson-chat') {\n        if (status === 'offline') {\n          if ($element.length) {\n            $element.remove();\n          }\n\n          self.lessonRoomUsers\n            .orderByChild('id')\n            .equalTo(Number(userId))\n            .once('value')\n            .then(function (snapshot) {\n              if (snapshot.hasChildren()) {\n                snapshot.forEach(function (snap) {\n                  self.lessonRoomUsers.child(snap.key).remove();\n                });\n              }\n            });\n        }\n      } else {\n        if ($element.length) {\n          $('.status .icon', $element).first().attr('class', 'icon icon-' + status);\n        }\n      }\n    },\n\n    bindScroll: function () {\n      var height = this.$chat.data('height');\n      var parent = this.$chat.data('parent');\n      var parentHeight = parent ? $(parent).height() : $(window).height();\n      var isPercentHeight = height.indexOf('%') > -1;\n      height = Number(height.replace('%', '').replace('px', ''));\n\n      if (isPercentHeight === true) {\n        this.chatHeight = (parentHeight / 100) * height;\n      } else {\n        this.chatHeight = height;\n      }\n\n      this.$chat.height(this.chatHeight);\n      this.$chat.find('.js-sidebar-scroll').scrollbar({});\n      this.$chat.find('.js-chat-messages .js-scroll').scrollbar({});\n    },\n\n    sanitizeHtml: function ($root) {\n      $root.find('div:empty').remove();\n\n      // Removes elements with only '<br/>' children\n      $root.children().each(function (i, el) {\n        var $el = $(el);\n        if (el.tagName !== 'BR' && $el.find('br').length > 0 && $el.find('br').length == $el.children().length) {\n          $el.remove();\n        }\n      });\n\n      // Removes last '<br/>'\n      if ($root.last().get(0).tagName === 'BR') {\n        $root.last().remove();\n      }\n\n      return $root;\n    },\n\n    submitMessage: function (event) {\n      event.preventDefault();\n      var self = app.chat;\n\n      var $html = self.sanitizeHtml(self.$text);\n      var text = $html.html();\n\n      if (text.length <= 0) return;\n\n      self.$text.html('').focus();\n\n      function pad(n) {\n        return (n < 10) ? ('0' + n) : n;\n      }\n\n      var date = new Date();\n\n      self.messages.push({\n        id: self.user.id,\n        name: self.user.first_name,\n        avatar_url: self.user.cover_image_url,\n        text: text,\n        timestamp: moment().unix(),\n        schedule: pad(date.getHours()) + ':' + pad(date.getMinutes())\n      });\n    },\n\n    scrollToEnd: function () {\n      var self = this;\n      self.$messagesScroll.scrollTop(self.$messagesScroll[0].scrollHeight);\n    },\n\n    renderMessage: function (data) {\n      var self = app.chat;\n      var html = self.renderTemplate('chat-message', {\n        avatar: data.avatar_url,\n        name: data.name,\n        text: data.text,\n        schedule: moment.unix(data.timestamp).format('LLL')\n      });\n\n      self.$messagesContainer.append(html);\n      self.scrollToEnd();\n    },\n\n    renderTemplate: function (key, data) {\n      var liquid = $('#' + key + '-template').html();\n      var template = Liquid.parse(liquid);\n\n      return template.render(data);\n    },\n\n    loadMessages: function () {\n      var self = app.chat;\n      const setMessage = function (data) {\n        self.renderMessage(data.val());\n      }.bind(self);\n\n      self.messages.limitToLast(12).on('child_added', setMessage);\n      self.messages.limitToLast(12).on('child_changed', setMessage);\n    },\n\n    loadRoomOnlineUsers: function () {\n      var self = app.chat;\n      const setUser = function (data) {\n        var $html = $(self.renderTemplate('chat-profile-list-item', data.val()));\n        $('.js-students').append($html);\n      }.bind(self);\n\n      const removeUser = function (data) {\n        $('.js-students [data-id=\"' + data.val().id + '\"]').remove();\n      }.bind(self);\n\n      self.lessonRoomUsers.on('child_added', setUser);\n      self.lessonRoomUsers.on('child_removed', removeUser);\n    },\n\n    loadSchoolGroup: function () {\n      var self = app.chat;\n      $.ajax({\n        url: window.CORE_HOST + '/chat/school_group',\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        }\n      }).success(function (data) {\n        data.is_school = true;\n\n        var $html = $(self.renderTemplate('chat-group-list-item', data));\n        $html.on('click', app.chat.changeRoom);\n        self.$groups.prepend($html);\n      });\n    },\n\n    loadGroups: function () {\n      var self = app.chat;\n      self.$loadMoreGroupsButton.attr('disabled', 'disabled');\n\n      $.ajax({\n        url: window.CORE_HOST + '/chat/groups?per_page=' + self.groupsPagination.perPage + '&page=' + (self.groupsPagination.page + 1),\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        }\n      }).success(function (data) {\n        self.groupsPagination.page = self.groupsPagination.page + 1;\n        self.$loadMoreGroupsButton.removeAttr('disabled', 'disabled');\n        self.groupsPagination.totalPages = data.total_pages;\n\n        if (self.groupsPagination.page >= self.groupsPagination.totalPages) {\n          self.$loadMoreGroupsButton.attr('disabled', 'disabled');\n        }\n\n        var groups = data.groups;\n        groups = _.sortBy(groups, {is_school: false});\n        groups = _.map(groups, function (g) {\n          g.is_school = false;\n          return g;\n        });\n\n        groups.forEach(function (group) {\n          var $html = $(self.renderTemplate('chat-group-list-item', group));\n          $html.on('click', app.chat.changeRoom);\n          self.$groups.append($html);\n        });\n\n        self.selectFirstRoomAvailable();\n      });\n    },\n\n    loadCollaborators: function () {\n      var self = app.chat;\n      self.$loadMoreCollaboratorsButton.attr('disabled', 'disabled');\n\n      $.ajax({\n        url: window.CORE_HOST + '/chat/collaborators?per_page=' + self.collaboratorsPagination.perPage + '&page=' + (self.collaboratorsPagination.page + 1),\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        }\n      }).success(function (data) {\n        self.collaboratorsPagination.page = self.collaboratorsPagination.page + 1;\n        self.$loadMoreCollaboratorsButton.removeAttr('disabled', 'disabled');\n        self.collaboratorsPagination.totalPages = data.total_pages;\n\n        if (self.collaboratorsPagination.page >= self.collaboratorsPagination.totalPages) {\n          self.$loadMoreCollaboratorsButton.attr('disabled', 'disabled');\n        }\n\n        self.addProfileItems(data.collaborators, 'js-team');\n        self.selectFirstRoomAvailable();\n      });\n    },\n\n    loadFollows: function () {\n      var self = app.chat;\n      self.$loadMoreStudentsButton.attr('disabled', 'disabled');\n\n      $.ajax({\n        url: window.CORE_HOST + '/chat/follows?per_page=' + self.followsPagination.perPage + '&page=' + (self.followsPagination.page + 1),\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        }\n      }).success(function (data) {\n        self.followsPagination.page = self.followsPagination.page + 1;\n        self.$loadMoreStudentsButton.removeAttr('disabled', 'disabled');\n        self.followsPagination.totalPages = data.total_pages;\n\n        if (self.followsPagination.page >= self.followsPagination.totalPages) {\n          self.$loadMoreStudentsButton.attr('disabled', 'disabled');\n        }\n\n        self.addProfileItems(data.users, 'js-students');\n        self.selectFirstRoomAvailable();\n      });\n    },\n\n    registerCurrentUser: function () {\n      var self = this;\n\n      self.lessonRoomUsers\n        .orderByChild('id')\n        .equalTo(self.user.id)\n        .once('value')\n        .then(function (snapshot) {\n          if (!snapshot.hasChildren()) {\n            self.lessonRoomUsers.push(self.user).then(function (snap) {\n              self.userFirebase = snap;\n            });\n          }\n        });\n    },\n\n    addProfileItems: function (users, divClass) {\n      var self = app.chat;\n\n      users.forEach(function (user) {\n        var $html = $(self.renderTemplate('chat-profile-list-item', user));\n        $html.on('click', app.chat.changeRoom);\n        $('.' + divClass).append($html);\n      });\n    },\n\n    changeRoom: function (event) {\n      var self = app.chat;\n\n      $('.chat-sidebar-list-item').removeClass('active');\n\n      var roomName = 'messages';\n\n      if (self.chatType === 'lesson-chat') {\n        roomName += '_lessons/' + self.chatLesson.id;\n\n        // change room name on div\n        self.$roomTitle.html(self.chatLesson.description);\n        self.$roomUsersCount.html(0);\n      } else {\n        var $element = $(event.currentTarget);\n        $element.addClass('active');\n\n        if ($element.data('type') === 'products') {\n          // room name on firebase\n          roomName += '_products/' + $element.data('id');\n\n          // change room name on div\n          self.$roomTitle.html($('.js-chat-group-name', $element).html());\n          self.$roomUsersCount.html($('.js-chat-group-users-count', $element).html());\n        } else if ($element.data('type') === 'users') {\n          var ids = [self.userId, parseInt($element.data('id'))].sort();\n          roomName += '_users/' + ids[0] + '/' + ids[1];\n\n          // change room name on div\n          self.$roomTitle.html($('.info .name', $element).html());\n          self.$roomUsersCount.html($('.info .location', $element).html());\n        } else if ($element.data('type') === 'schools') {\n          // room name on firebase\n          roomName += '_schools/' + self.schoolId;\n\n          // change room name on div\n          self.$roomTitle.html($('.js-chat-group-name', $element).html());\n          self.$roomUsersCount.html($('.js-chat-group-users-count', $element).html());\n        }\n      }\n\n      self.$messagesContainer.html('');\n\n      if (self.messages) {\n        self.messages.off();\n      }\n\n      self.messages = self.database.ref(roomName);\n      self.loadMessages();\n    },\n\n    selectFirstRoomAvailable: function () {\n      if (!self.$selectedRoom) {\n        // Select first room\n        self.$selectedRoom = $('.chat-sidebar-list-item').first();\n        self.$selectedRoom.click();\n      }\n    }\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  app.bindCheckout = function () {\n    $('#js-terms-of-use-check').change(function () {\n      if ($(this).is(\":checked\") === true) {\n        $('.cta-checkout-cart').removeClass('disabled');\n      } else {\n        $('.cta-checkout-cart').addClass('disabled');\n      }\n    });\n\n    $(document).trigger('app:bind:checkout');\n  };\n})();\n","(function () {\n  'use strict';\n\n  app.ckeditor = {\n    bindCkeditor: function () {\n      var src = '//cdn.edools.com/libs/ckeditor/4.5.10/ckeditor.js';\n\n      if ($('.js-ckeditor').length) {\n        loadAsset('window.CKEDITOR', src, function () {\n          var config = {\n            language: 'pt-br',\n            skin: 'bootstrapck'\n          };\n\n          $('.js-ckeditor').each(function (index, ckeditorObj) {\n            if (!$('#cke_' + ckeditorObj.id).length) {\n              config.placeholder = ckeditorObj.placeholder; // TODO: fix it\n\n              CKEDITOR.replace(ckeditorObj.id, config);\n            }\n          });\n\n          app.ckeditor.bindCkeditorSubmit();\n          $(document).trigger('app:bind:ckeditor');\n        });\n      }\n    },\n\n    bindCkeditorSubmit: function () {\n      $.each($('.js-ckeditor'), function (index, editor) {\n        var $editor = $(editor);\n        var $form = $editor.parents('form');\n        var editorId = $editor.attr('id');\n\n        if ($form) {\n          var $submitButton = $form.find('button[type=\"submit\"]');\n\n          CKEDITOR.instances[editorId].on('change', function () {\n            if (this.getData().length) {\n              $submitButton.attr('disabled', false);\n            } else {\n              $submitButton.attr('disabled', true);\n            }\n          });\n        }\n      });\n\n      $(document).trigger('app:bind:ckeditor_submit');\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  app.bindCollaborativeDiscussion = function() {\n    $(document).on('click', '#collaborative-discussion .js-edit-button' ,function () {\n      var commentId = $(this).data('comment-id');\n      var $comment = $('#js-comment-' + commentId);\n\n      $comment.find('.js-show-comment').addClass('hide');\n      $comment.find('.js-edit-container').removeClass('hide');\n    });\n\n    $(document).on('click', '#collaborative-discussion .js-cancel-button' ,function () {\n      var commentId = $(this).data('comment-id');\n      var $comment = $('#js-comment-' + commentId);\n\n      $comment.find('.js-show-comment').removeClass('hide');\n      $comment.find('.js-edit-container').addClass('hide');\n    });\n\n\n    $(document).trigger('app:bind:collaborative_discussion');\n  };\n})();\n","(function () {\n  'use strict';\n\n  app.bindDatepicker = function () {\n    // TODO: Handle i18n\n    $.fn.datepicker.defaults.language = 'pt-BR';\n\n    $('.datepicker').each(function (i, el) {\n      var $el = $(el);\n      var $hidden = $('<input type=\"hidden\" />').insertBefore($el.parent());\n      var frontDate = moment($el.val()).utc().format('DD/MM/YYYY');\n      var serverDate = moment($el.val()).utc().format('YYYY-MM-DD');\n      serverDate = (serverDate === 'Invalid date') ? null : serverDate;\n\n      $hidden.attr('id', $el.attr('id'));\n      $hidden.attr('name', $el.attr('name'));\n      $hidden.attr('value', serverDate);\n\n      $el.removeAttr('id');\n      $el.removeAttr('name');\n\n      if ($el.val() !== \"\") {\n        $el.val(frontDate);\n      }\n\n      $(el).datepicker()\n        .on('change', function () {\n          var date = moment($el.val(), 'DD/MM/YYYY').utc().format('YYYY-MM-DD');\n          date = (date === 'Invalid date') ? null : date;\n          $hidden.val(date);\n        });\n    });\n\n    $(document).trigger('app:bind:datepicker');\n  };\n\n})();\n","(function () {\n  'use strict';\n\n  app.bindExamQuestionForm = function () {\n    $(document).on('click', '#js-remake-exam', function () {\n      $('#answers-container').addClass('hide');\n      $('#form-container').removeClass('hide');\n    });\n\n    $(document).on('click', '.js-clean-associative-options', function () {\n      $(this).parents('.associative-question')\n        .find('.js-associative-select option:selected')\n        .removeAttr('selected')\n    });\n\n    $(document).on('change', '.js-associative-select', function () {\n      var $question = $(this).parents('.associative-question');\n      var optionIndex = $(this).data('option-index');\n      var assertionId = $(this).find('option:selected').data('first-assertion-id');\n\n      $question.find('.js-associate-assertion[data-option-index=\"' + optionIndex + '\"]').val(assertionId);\n    });\n\n    // bind all form's inputs\n    $(document).on('change', '#exam_answer_form', app.checkFormValidity);\n    // bind all form's textareas for all types of typing\n    $(document).on('input propertychange', '#exam_answer_form', app.checkFormValidity);\n\n    $(document).trigger('app:bind:bind_exam_question_form');\n  };\n})();\n","(function () {\n  'use strict';\n\n  app.bindFixOnScroll = function () {\n    $('.js-fix-on-scroll').each(function (i, el) {\n      if (!$(el).hasClass('js-fix-on-scroll-mobile') && window.innerWidth < 992) {\n        return;\n      }\n\n      var $el = $(el);\n      $el.wrap('<div class=\"js-fix-scroll-wrapper\"/>');\n      var $wrapper = $el.parent('.js-fix-scroll-wrapper');\n\n      var offset = $el.offset();\n      var size = {\n        width: $el.outerWidth(),\n        height: $el.outerHeight()\n      };\n\n      $wrapper.width(size.width);\n      $wrapper.height(size.height);\n\n      $(document).on('scroll', function (e) {\n        var scrollTop = $(document).scrollTop();\n\n        if (scrollTop >= offset.top) {\n          if ($el.css('position') === 'fixed') return;\n\n          $el.parent().addClass('scroll');\n          $el.addClass('scroll');\n          $el.css({\n            position: 'fixed',\n            left: offset.left,\n            top: 0,\n            width: size.width,\n            height: size.height,\n            'z-index': '10000'\n          });\n        } else {\n          if ($el.css('position') === 'static') return;\n\n          $el.removeClass('scroll');\n          $el.parent().removeClass('scroll');\n          $el.css({\n            position: 'static',\n            left: 'auto',\n            top: 'auto',\n            width: 'auto',\n            height: 'auto'\n          });\n        }\n      })\n\n    });\n  }\n})();\n","(function () {\n  'use strict';\n\n  app.followBind = function () {\n    $(document).on({\n        mouseenter: function(){\n          $(this).addClass('hidden');\n          $('#js-unfollow').removeClass('hidden');\n        }\n    }, '#js-following');\n\n    $(document).on({\n        mouseleave: function(){\n          $('#js-following').removeClass('hidden');\n          $(this).addClass('hidden');\n        }\n    }, '#js-unfollow');\n  };\n})();\n","(function () {\n  'use strict';\n\n  app.lessonList = {\n    init: function () {\n      var self = this;\n\n      self.courseTreeExists = self.courseTree().length;\n      self.isActive = self.courseTree().data('is-active');\n      self.course = self.courseTree().data('course');\n      self.enrollment = self.courseTree().data('enrollment');\n      self.courseContent = self.courseTree().data('course-content');\n      self.userType = self.courseTree().data('user-type');\n      self.lessonActions = self.courseTree().data('lesson-actions');\n      self.downloadAction = self.courseTree().data('download-action');\n      self.currentLessonId = parseInt(self.courseTree().data('current-lesson-id'));\n      self.apiKey = self.courseTree().data('api-key');\n\n      self.translations = {};\n      self.translations['lesson.release_at'] = self.courseTree().data('translation-release-at');\n      self.translations['lesson.release_after'] = self.courseTree().data('translation-release-after');\n      self.translations['product.course_content.views'] = self.courseTree().data('translation-course_content-views');\n\n      if (self.lessonProgress() && self.lessonProgress().completed) {\n        $('.btn-next-lesson').removeClass('disabled');\n      }\n\n      if (self.courseTreeExists && !self.isActive) {\n        self.bindClicks();\n        self.handleLessons();\n        self.loadTopModules();\n        self.bindChangeLesson();\n\n        $(document).trigger('app:bind:lesson_sidebar');\n\n        $(document).on('lesson-completed', function (event, lessonProgress) {\n          var $mediaControls = $('.btn-next-lesson');\n          var enrollmentId = lessonProgress.data.enrollment_id;\n\n          if (self.progressIcon('completed').hasClass('hide')) {\n            self.progressIcon('completed').removeClass('hide');\n          }\n\n          if (!self.progressIcon('progress').hasClass('hide')) {\n            self.progressIcon('progress').addClass('hide');\n          }\n\n\n          if ($mediaControls.size() > 0) {\n            $mediaControls.removeClass('disabled');\n          }\n\n          app.lessonList.requirementsExists(lessonProgress.data, function ($item, content_id) {\n            if ($item && content_id) {\n              app.lessonList.checkLessonCompleted(enrollmentId, content_id, function (completed) {\n                if (completed) {\n                  $item.removeClass('blocked');\n                  $item.find('.right > .icon-lock').remove();\n                }\n              });\n            }\n          });\n        });\n      }\n    },\n\n    // Props\n\n    courseTree: function () {\n      return $('.course-content #js-course-tree-ajax');\n    },\n\n    lazyLoadButtons: function () {\n      return $('.course-content #js-course-content-more-link, .course-content #js-course-content-prev-link');\n    },\n\n    lessons: function () {\n      return this.courseTree().find('.js-content');\n    },\n\n    currentLesson: function () {\n      return $(this.courseTree().find('.js-content.active')[0]);\n    },\n\n    toggleButton: function () {\n      return $('.lesson-list-toggle .btn');\n    },\n\n    lessonListPanel: function () {\n      return $('.lesson-list-panel');\n    },\n\n    lessonProgress: function () {\n      return $('#js-media-player').data('lesson-progress');\n    },\n\n    progressIcon: function (type) {\n      var iconType = {\n        completed: '.js-completed-icon',\n        progress: '.js-in-progress-icon'\n      };\n\n      return this.currentLesson().find(iconType[type]);\n    },\n\n    requirementsExists: function (lessonProgress, cb) {\n      if (!lessonProgress) {\n        return false;\n      }\n\n      var requirementsElements = $('.lesson-list-panel [data-requirements]')\n        .filter(function (index, item) {\n          return $(item).data('requirements').length > 0;\n        });\n\n      var requirementsUnified = requirementsElements.map(function (idx, item) {\n        return {\n          item: $(item),\n          requirements: $(item).data('requirements')\n        }\n      }).toArray();\n\n      var exists = _.find(requirementsUnified, {requirements: [{content_id: lessonProgress.lesson_id}]});\n\n      if (exists) {\n        var $item = exists.item;\n        if (cb) {\n          return cb($item, lessonProgress.lesson_id);\n        }\n      } else {\n        if (cb) {\n          return cb(null);\n        }\n      }\n    },\n\n    checkLessonCompleted: function (enrollmentId, id, cb) {\n      var self = this;\n      var completed = false;\n      var apiKey = $('.course-content #js-course-tree-ajax').data('api-key');\n\n      $.ajax({\n        url: window.CORE_HOST + '/enrollments/' + enrollmentId + '/lessons_progresses?lesson_id=' + id,\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + apiKey\n        }\n      }).success(function (data) {\n        completed = data.lessons_progresses[0].completed;\n\n        cb(completed);\n      });\n    },\n\n    // Actions\n    bindChangeLesson: function () {\n      var self = this;\n\n      if (!self.bindChangeLessonActive) {\n        self.bindChangeLessonActive = true;\n        var course_path_regex = /enrollments\\/\\d+\\/courses\\/\\d+$/;\n        var lesson_path_regex = /enrollments\\/\\d+\\/courses\\/\\d+\\/course_contents\\/\\d+$/;\n\n        $(document).on(\"ready page:load\", function (e) {\n          var path = window.location.pathname;\n          var lesson_path = lesson_path_regex.test(path);\n\n          if (course_path_regex.test(path) || lesson_path) {\n            self.lessons().removeClass('active');\n\n            if (lesson_path) {\n              var path_array = path.split('/');\n              var content_id = path_array[path_array.length - 1];\n\n              $(\"#content-\" + content_id + \".js-content\").addClass('active');\n            }\n          }\n        })\n      }\n    },\n\n    bindClicks: function () {\n      var self = this;\n\n      self.lessons().find('a').on('click', function (e) {\n        e.preventDefault();\n        app.lessonList.changeLesson(null, $(this).parents('.js-content'));\n      });\n\n      self.courseTree().on('click', '.module', function (e) {\n        if (!$(e.target).hasClass('module') && !$(e.target).parent().hasClass('module')) {\n          return;\n        }\n\n        e.stopPropagation();\n\n        self.loadChildren($(this));\n      });\n\n      self.courseTree().data('is-active', true);\n\n      self.toggleButton().on('click', this.toggleSidebar);\n    },\n\n    getLessonIcon: function (lesson) {\n      var lessonIcon = '';\n\n      if (lesson.type === 'ExamLesson' && lesson.activity) {\n        switch (lesson.activity.type) {\n          case 'Quiz': {\n            lessonIcon = 'icon-puzzle';\n            break;\n          }\n          case 'FileUpload': {\n            lessonIcon = 'icon-arrow-up-circle';\n            break;\n          }\n          case 'CollaborativeDiscussion': {\n            lessonIcon = 'icon-people';\n            break;\n          }\n          default: {\n            lessonIcon = 'icon-puzzle'\n          }\n        }\n      } else if (lesson.media) {\n        switch (lesson.media.type) {\n          case 'Video': {\n            lessonIcon = 'icon-camrecorder';\n            break;\n          }\n          case 'Audio': {\n            lessonIcon = 'icon-microphone';\n            break;\n          }\n          case 'Slide': {\n            lessonIcon = 'icon-chart';\n            break;\n          }\n          case 'Document': {\n            lessonIcon = 'icon-doc';\n            break;\n          }\n          case 'Image': {\n            lessonIcon = 'icon-picture';\n            break;\n          }\n          case 'Text': {\n            lessonIcon = 'icon-doc';\n            break;\n          }\n          case 'LiveStream': {\n            lessonIcon = 'icon-control-play';\n            break;\n          }\n          case 'VideoSlide': {\n            lessonIcon = 'icon-film';\n            break;\n          }\n          case 'ScormPackage': {\n            lessonIcon = 'icon-layers';\n            break;\n          }\n          case 'Html': {\n            lessonIcon = 'icon-doc';\n            break;\n          }\n          case 'Html5': {\n            lessonIcon = 'icon-docs';\n            break;\n          }\n          default: {\n            lessonIcon = 'icon-camrecorder';\n          }\n\n        }\n      }\n\n      return lessonIcon;\n    },\n\n    getContentPath: function (content) {\n      var self = this;\n\n      var enrollmentId = self.enrollment.id;\n      var courseId = self.course.id;\n\n      var path = enrollmentId ? '/enrollments/' + enrollmentId : '/admin_view';\n      path = path + '/courses/' + courseId + '/course_contents/' + content.id;\n\n      return path;\n    },\n\n    getContentDownloadPath: function (content) {\n      var self = this;\n      return self.getContentPath(content) + '/download';\n    },\n\n    checkLessonAvailability: function (lesson) {\n      var releaseAt = lesson.release_at;\n      var releaseAfter = lesson.release_after;\n\n      if (!releaseAt && !releaseAfter) {\n        return true;\n      }\n\n      var enrollmentActivatedAt = moment(this.enrollment.activated_at);\n\n      var releaseTime = releaseAt ? moment(releaseAt) : enrollmentActivatedAt.add(releaseAfter, 'days');\n\n      return moment() > releaseTime;\n    },\n\n    checkTrialByType: function (type, id) {\n      var $tree = $('#js-course-tree-ajax');\n      var enrollment = $tree.data('enrollment');\n      var constrains_name = 'trial_' + type + '_ids';\n\n      var payment_method = enrollment && enrollment.payment_method;\n      var constrains_tree = $tree.data('school-product') && $tree.data('school-product').trial_constrains;\n      var constrains = constrains_tree && payment_method && constrains_tree[payment_method];\n\n      if (constrains && !constrains.hasOwnProperty(constrains_name)) {\n        return false;\n      }\n\n      if (enrollment && !enrollment['on_trial?']) {\n        return false;\n      }\n\n      if (constrains_tree && constrains[constrains_name]) {\n        return constrains[constrains_name].indexOf(id) > -1;\n      }\n\n      return false;\n    },\n\n    fetchModules: function ($parent) {\n      var self = this;\n      var id = $parent.data('id');\n      var level = $parent.data('level');\n      var $list = $parent.find('.list-group').first();\n\n      return $.ajax({\n        url: window.CORE_HOST + '/course_modules/' + id,\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        },\n        success: function (res) {\n          var modules = _.sortBy(res.course_modules, 'order');\n\n          modules = _.filter(modules, function (m) {\n            var module = _.find(self.allModules, {id: m.id});\n            return module.available !== false && (module.course_content_ids.length > 0 || module.course_modules.length > 0);\n          });\n\n          var $modules = _.map(modules, function (module) {\n            return $(\n              '<li class=\"list-group-item module\" ' +\n              'data-id=\"' + module.id + '\"' +\n              'data-level=\"' + (level + 1) + '\">' +\n              '<i class=\"icon icon-arrow-right\"></i>' +\n              '<span>' + module.name + '</span>' +\n              '<i class=\"busy busy-xs\"></i>' +\n              '</li>');\n          });\n\n          $list.append($modules);\n        }\n      })\n    },\n\n    fetchChildren: function ($parent) {\n      var self = this;\n      var id = $parent.data('id');\n      var level = $parent.data('level');\n      var $list = $parent.find('.list-group').first();\n\n      return $.ajax({\n        url: window.CORE_HOST + '/course_modules/' + id + '/course_contents',\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        },\n        success: function (res) {\n          var courseContents = _.filter(res.course_contents, function (lesson) {\n            return lesson.available !== false;\n          });\n\n          courseContents = _.sortBy(courseContents, 'order');\n\n          if (self.enrollment) {\n            courseContents = _.map(courseContents, function (content) {\n              content.completed = self.enrollment.lessons_info && self.enrollment.lessons_info.completed.indexOf(content.lesson.id) > -1;\n              return content;\n            });\n          }\n\n          var $courseContents = _.map(courseContents, function (content) {\n              var active = (self.currentLessonId === content.lesson.id ? 'active js' : '');\n              var lesson = content.lesson;\n              var lessonIcon = self.getLessonIcon(lesson);\n              var hideInProgressIcon = 'hide';\n              var hideCompletedIcon = 'hide';\n              var lessonReleased = null;\n              var releaseType = null;\n              var releaseDate = null;\n              var progress = null;\n              var requirements = content.requirements;\n              var available = true;\n              var requirements_ids = requirements.map(function (item) {\n                return item.content_id;\n              });\n\n              if (self.enrollment) {\n                lessonReleased = self.checkLessonAvailability(lesson);\n\n                if (self.enrollment.lessons_info && self.enrollment.lessons_info.completed.indexOf(lesson.id) > -1) {\n                  hideInProgressIcon = 'hide';\n                  hideCompletedIcon = null;\n                } else {\n                  if (self.enrollment.lessons_info && self.enrollment.lessons_info.in_progress.indexOf(lesson.id) > -1) {\n                    hideInProgressIcon = null;\n                    hideCompletedIcon = 'hide';\n                  } else {\n                    hideInProgressIcon = 'hide';\n                    hideCompletedIcon = 'hide';\n                  }\n                }\n\n                if (lesson.release_at) {\n                  releaseType = 'release_at';\n                  releaseDate = lesson.release_at;\n                } else if (lesson.release_after) {\n                  releaseType = 'release_after';\n                  releaseDate = moment(self.enrollment.activated_at).add(lesson.release_after, 'days');\n                }\n\n                if (self.lessonActions) {\n                  progress = _.find(self.enrollment.lessons_progresses, {lesson_id: lesson.id});\n                }\n              }\n\n              if (self.enrollment) {\n                _.each(requirements_ids, function (id) {\n                  var exists = _.find(courseContents, {content_id: id, completed: true});\n\n                  if (!exists) {\n                    available = false;\n                  }\n                });\n              }\n\n              if (content.completed) {\n                $('.btn-next-lesson').removeClass('disabled');\n              }\n\n              var html = '<li class=\"list-group-item content-lesson js-content list-group-item lesson module-item ' + active + (!available || (self.enrollment && self.checkTrialByType('content', content.id)) ? ' blocked' : '') + '\" ' +\n                'id=\"content-' + content.id + '\" ' +\n                'data-requirements=\\'' + JSON.stringify(requirements) + '\\'' +\n                'data-id=\"' + content.lesson.id + '\"' +\n                'data-level=\"1\">' +\n                '<div id=\"lesson-' + lesson.id + '\" class=\"js-lesson content-lesson ' + active + (!lessonReleased ? ' not-released' : '') + '\" data-lesson-id=\"' + lesson.id + '\">' +\n                '<div class=\"class-info\">' +\n\n                '<div class=\"left\"><i class=\"' + lessonIcon + '\"></i></div>' +\n\n                '<div class=\"center\">' +\n                (self.lessonActions && lessonReleased ?\n                  '<a class=\"lesson-title\" href=\"' + self.getContentPath(content) + '\"><span>' + lesson.title + '</span></a>' :\n                  '<span class=\"lesson-title\"><span class=\"disabled\">' + lesson.title + '</span></span>') +\n                '</div>' +\n\n                '<div class=\"right\">' +\n                ((!available || (self.enrollment && self.checkTrialByType('content', content.id))) ? '<i class=\"icon-lock\"></i>' : '') +\n                '<span class=\"progress-icon js-progress-icons\">' +\n                '<i class=\"icon-check js-completed-icon ' + hideCompletedIcon + '\"></i>' +\n                '<i class=\"icon-clock js-in-progress-icon ' + hideInProgressIcon + '\"></i>' +\n                '</span>';\n\n              if (self.lessonActions) {\n                if (progress && progress.views <= self.enrollment.max_attendance_length && self.enrollment.max_attendance_type == 'attempts') {\n                  var translation = self.translations['product.course_content.views'];\n\n                  translation = translation.replace('{{ progress.views }}', progress.views);\n                  translation = translation.replace('{{ enrollment.max_attendance_length }}', self.enrollment.max_attendance_length);\n\n                  html += '<span class=\"lesson-views attempt js-attendance badge\" title=\"' + translation + '\" data-tooltip-placement=\"left\" data-toggle=\"tooltip\">' +\n                    '<span>' + progress.views + '/' + self.enrollment.max_attendance_length + '</span>' +\n                    '</span>';\n                }\n\n                if (!lessonReleased) {\n                  var zone = moment.tz.guess();\n                  html += '<span class=\"release-date badge\">' + self.translations['lesson.' + releaseType] + '<span> ' + moment.tz(releaseDate, zone).format('DD/MM/YYYY') + '</span>' + '</span>';\n                }\n\n                if (self.downloadAction && content.downloadable) {\n                  html += '<a class=\"download-link\" href=\"' + self.getContentDownloadPath(content) + '\" data-no-turbolink>' +\n                    '<i class=\"icon-cloud-download\"></i>' +\n                    '</a>';\n                }\n              }\n\n              html += '</div>' +\n                '</div>' +\n                '</li>';\n\n              return $(html);\n            }\n          );\n\n          $list.append($courseContents);\n          self.checkNextButtonUnlocked();\n\n        }\n      });\n    },\n\n    checkNextButtonUnlocked: function () {\n      var lessonProgress = this.lessonProgress();\n\n      app.lessonList.requirementsExists(lessonProgress, function ($item, content_id) {\n        if ($item && content_id) {\n          if (!content_id || !lessonProgress.hasOwnProperty('enrollment_id')) {\n            return;\n          }\n\n          app.lessonList.checkLessonCompleted(lessonProgress.enrollment_id, content_id, function (completed) {\n            if (completed) {\n              $('.btn-next-lesson').removeClass('disabled');\n              $item.removeClass('blocked');\n              $item.find('.right > .icon-lock').remove();\n            }\n          });\n        }\n        else {\n          $('.btn-next-lesson').removeClass('disabled');\n        }\n      });\n    },\n\n    loadTopModules: function () {\n      var self = this;\n\n      if (!self.course) return;\n\n      $.ajax({\n        url: window.CORE_HOST + '/courses/' + self.course.id + '/course_modules',\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token token=' + self.apiKey\n        },\n        success: function (res) {\n          if (!res.course_modules || res.course_modules.length <= 0) return;\n\n          self.allModules = res.course_modules;\n\n          self.topModules = _.filter(res.course_modules, function (x) {\n            return (!x.parent_course_module && x.available !== false) &&\n              (x.course_content_ids.length > 0 || x.course_modules.length > 0);\n          });\n\n          self.topModules = _.sortBy(self.topModules, 'order');\n\n          var $modules = _.map(self.topModules, function (module) {\n            var disabled = self.enrollment && self.checkTrialByType('module', module.id);\n\n            return $(\n              '<li class=\"list-group-item module ' + (disabled ? 'disabled' : '') + '\" ' +\n              'data-id=\"' + module.id + '\"' +\n              'data-level=\"1\">' +\n              '<i class=\"icon icon-arrow-right\"></i>' +\n              '<span>' + module.name + '</span>' +\n              '<i class=\"busy busy-xs\"></i>' +\n              '</li>');\n          });\n\n          self.courseTree().prev('.course-content-busy').fadeOut('fast', function () {\n            self.courseTree().css('display', 'none');\n            self.courseTree().html($modules);\n            self.courseTree().fadeIn('fast');\n\n            if (self.courseContent) {\n              self.expandParentModules(self.courseContent.parent_modules_hash);\n            }\n          });\n        }\n      })\n    },\n\n    loadChildren: function (parent, cb) {\n      var self = this;\n      var $parent = $(parent);\n\n      var id = $parent.data('id');\n      var level = $parent.data('level');\n      var $list = $parent.find('.list-group').first();\n\n      if ($list.length <= 0) {\n        $parent.find('.busy').css({opacity: 1});\n        $list = $('<ul class=\"list-group\" style=\"display: none;\"></ul>');\n        $list.appendTo($parent);\n\n        $.when(self.fetchModules($parent), self.fetchChildren($parent))\n          .then(function () {\n            $parent.addClass('expanded');\n            $parent.find('.busy').css({opacity: 0});\n\n            $list.slideDown('fast');\n\n            if (typeof cb === 'function') {\n              cb();\n            }\n          });\n      } else {\n        if ($parent.hasClass('expanded')) {\n          $parent.removeClass('expanded');\n          $list.slideUp('fast');\n        } else {\n          $parent.addClass('expanded');\n          $list.slideDown('fast');\n        }\n\n        if (typeof cb === 'function') {\n          cb();\n        }\n      }\n    },\n\n    handleLessons: function () {\n      $(document).on('page:load page:restore', function (e) {\n\n        if (!e.originalEvent || !e.originalEvent.data || e.originalEvent.data.length == 0) return;\n\n        var $html = $(e.originalEvent.data[0]);\n        app.lessonList.lessons().each(function (i, el) {\n          var $el = $(el);\n          var $new = $html.find('#' + $el.attr('id'));\n          $el.html($new.html());\n        });\n      })\n    },\n\n    changeLesson: function (direction, lesson) {\n      var $targetLesson = $(lesson);\n\n      if (direction === 'prev') {\n        var $prev = app.lessonList\n          .currentLesson()\n          .prevAll('.js-content');\n\n        if ($prev.length > 0 && $prev.find('a').length > 0)\n          $targetLesson = $($prev[0]);\n      } else if (direction === 'next') {\n        var $next = app.lessonList\n          .currentLesson()\n          .nextAll('.js-content');\n\n        if ($next.length > 0 && $next.find('a').length > 0)\n          $targetLesson = $($next[0]);\n      }\n\n      $targetLesson.find('a')[0].click();\n    },\n\n    expandParentModules: function (parentModules) {\n      var self = this;\n\n      var modules = [];\n      var loopModule = parentModules.course_module;\n      modules.push(loopModule.id);\n\n      while (loopModule.parent_module) {\n        loopModule = loopModule.parent_module;\n        modules.push(loopModule.id);\n      }\n\n      modules = modules.reverse();\n\n      async.eachSeries(modules, function (moduleId, cb) {\n        var $module = $('.module[data-id=\"' + moduleId + '\"]');\n        self.loadChildren($module, cb);\n      });\n\n    },\n\n    toggleSidebar: function () {\n      app.lessonList.toggleButton().toggleClass('active');\n      app.lessonList.lessonListPanel().toggleClass('active');\n    }\n  };\n\n})();\n","(function () {\n  'use strict';\n\n  app.lessonPage = function () {\n    var REGEX_COLLABORATIVE_DISCUSSIONS = /\\/collaborative_discussions\\/([0-9]+)\\/collaborative_comments/;\n    var REGEX_EXAM_ANSWERS = /\\/exam_answers/;\n\n    var isCollaborativeDiscuttion = function (value) {\n      return REGEX_COLLABORATIVE_DISCUSSIONS.test(value);\n    };\n\n    var isExamAnswer = function (value) {\n      return REGEX_EXAM_ANSWERS.test(value);\n    };\n\n    $(document).ajaxSuccess(function (event, xhr, settings) {\n      if (isCollaborativeDiscuttion(settings.url) || isExamAnswer(settings.url)) {\n        var lessonProgress = app.lessonList.lessonProgress();\n\n        app.lessonList.requirementsExists(lessonProgress, function ($item, content_id) {\n          if (content_id && lessonProgress.enrollment_id) {\n            app.lessonList.checkLessonCompleted(lessonProgress.enrollment_id, content_id, function (completed) {\n              if (completed) {\n                var $currentItemIcon = app.lessonList.currentLesson().find('.js-in-progress-icon');\n                $currentItemIcon.removeClass('icon-clock');\n                $currentItemIcon.removeClass('js-in-progress-icon');\n                $currentItemIcon.addClass('js-in-completed-icon');\n                $currentItemIcon.addClass('icon-check');\n\n                $('.btn-next-lesson').removeClass('disabled');\n                $item.removeClass('disabled');\n                $item.removeClass('blocked');\n                $item.find('.right > .icon-lock').remove();\n              }\n            });\n          }\n        }, function () {\n          $('.btn-next-lesson').removeClass('disabled');\n        });\n\n      }\n    });\n  };\n})();\n","(function () {\n  'use strict';\n\n  app.bindMasks = function () {\n    var phoneMaskBehavior = function (val) {\n      return val.replace(/\\D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';\n    };\n\n    var phoneMaskOptions = {\n      onKeyPress: function (val, e, field, options) {\n        field.mask(phoneMaskBehavior.apply({}, arguments), options);\n      }\n    };\n\n    $('#user-phone').mask(phoneMaskBehavior, phoneMaskOptions);\n    $('#user-cpf').mask('999.999.999-99');\n    $('#user-cep').mask('99.999-999');\n\n    $(document).trigger('app:bind:masks');\n  };\n})();\n","app.notepad = {\n  page: 1,\n\n  noteContainer: function () {\n    return $('#notepad-container');\n  },\n\n  form: function () {\n    return $('#js-notepad-form');\n  },\n\n  loadNote: function (lesson_id, cb) {\n    $.ajax({\n      url: window.location.pathname + '/notepads',\n      method: 'GET',\n      success: function () {\n        if (typeof cb == 'function') {\n          cb();\n        }\n      }\n    })\n  },\n\n  saveNote: function (cb) {\n    var note = $(\"#js-note\").html();\n    var note_id = $(\"#js_note_id\").val();\n\n    var $button = $(\"#save_notepad_button\");\n    var buttonLabel = $button.html();\n    $button.html($button.data(\"sending\"));\n    $button.prop('disabled', true);\n\n    $.ajax({\n      url: window.location.pathname + '/notepads',\n      method: 'POST',\n      data: {\n        _id: note_id,\n        note: note\n      },\n      success: function () {\n        $button.html(buttonLabel);\n        $button.prop('disabled', false);\n        if (typeof cb == 'function') {\n          cb();\n        }\n      }\n    });\n  },\n\n  init: function () {\n    var self = this;\n    if (this.noteContainer().length <= 0) return;\n    this.loadNote($(\"#lesson_id\").val());\n\n    $(\"#notepad_form\").on('submit', function(event) {\n      event.preventDefault();\n      self.saveNote();\n    });\n  }\n};\n","(function () {\n  'use strict';\n\n  app.pagarme = {\n    buildCreditCard: function () {\n      var creditCard = new PagarMe.creditCard();\n      var expiration = $(\"#card-form #card-expiration\").val().split('/');\n\n      creditCard.cardExpirationMonth = parseInt(expiration[0]);\n      creditCard.cardExpirationYear  = parseInt(expiration[1]);\n      creditCard.cardHolderName      = $(\"#card-form #card-holder-name\").val();\n      creditCard.cardNumber          = $(\"#card-form #card-number\").val();\n      creditCard.cardCVV             = $(\"#card-form #card-cvc\").val();\n\n      return creditCard;\n    },\n\n    submitFormCreditCardHash: function (paymentForm) {\n      var creditCard  = app.pagarme.buildCreditCard();\n      var fieldErrors = creditCard.fieldErrors();\n      var hasErrors   = false;\n      for(var field in fieldErrors) { hasErrors = true; break; }\n\n      console.log(1);\n      window.creditCardTest = creditCard;\n\n      if(hasErrors) {\n        window.fieldErrors = fieldErrors;\n\n        console.log(window.fieldErrors);\n      } else {\n        creditCard.generateHash(function(cardHash) {\n          $('#card_hash').val(cardHash);\n\n          paymentForm.get(0).submit();\n        });\n      }\n    },\n\n    init: function () {\n      var src = 'https://assets.pagar.me/js/pagarme.min.js',\n        paymentForm = $('#card-form'),\n        pagarmeKey  = $(\"#pagarme\").val();\n\n      if (paymentForm.length && pagarmeKey) {\n        loadAsset('PagarMe', src, function () {\n          PagarMe.encryption_key = pagarmeKey;\n\n          paymentForm.submit(function(event) {\n            event.preventDefault();\n\n            app.pagarme.submitFormCreditCardHash(paymentForm);\n          });\n\n          $(document).trigger('app:bind:pagarme');\n        });\n      }\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  app.bindPostsForm = function () {\n    $(document).on('click', '.js-post-edit', function () {\n      var post = $(this).parents('.js-post');\n\n      post.find('.js-post-body').addClass('hidden');\n      post.find('.js-post-form').removeClass('hidden');\n    });\n\n    $(document).on('click', '.js-post-cancel', function (e) {\n      var post = $(this).parents('.js-post');\n\n      post.find('.js-post-body').removeClass('hidden');\n      post.find('.js-post-form').addClass('hidden');\n    });\n\n    $(document).trigger('app:bind:bind_posts_form');\n  };\n})();\n","(function () {\n  'use strict';\n\n  app.bindReadMore = function () {\n    $('[role=\"readmore\"]').each(function (i, el) {\n      var speed = $(el).data('speed') || 100;\n      var collapsedHeight = $(el).data('collapsed-height') || 200;\n      var moreText = $(el).data('more-text') || 'Leia Mais';\n      var lessText = $(el).data('less-text') || 'Fechar';\n\n      var currHeight = $(el).innerHeight();\n      var showLink = currHeight <= collapsedHeight;\n\n      $(el).readmore({\n        speed: speed,\n        collapsedHeight: collapsedHeight,\n        moreLink: '<a href=\"#\" class=\"' + (showLink ? 'hidden' : 'readmore-link') + '\">' + moreText + '</a>',\n        lessLink: '<a href=\"#\" class=\"' + (showLink ? 'hidden' : 'readmore-link') + '\">' + lessText + '</a>'\n      })\n    });\n  }\n})();\n","(function () {\n  'use strict';\n\n  app.simpleEditor = {\n\n    createShortcut: function (bindKey, callback) {\n      var isMac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n\n      var bindFunction = function (e) {\n        var character = String.fromCharCode(e.keyCode);\n        var ctrl = e.ctrlKey;\n        var meta = !!e.metaKey;\n        var score = 0;\n\n        if (isMac && meta) {\n          score++;\n        } else if (ctrl) {\n          score++;\n        }\n\n        if (character == bindKey) {\n          score++;\n        }\n\n        if (score == 2) {\n          e.stopPropagation();\n          e.preventDefault();\n          return callback();\n        }\n\n      };\n\n      $('body').bind('keydown', bindFunction);\n    },\n\n    handleDrag: function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    },\n\n    handleDrop: function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      var x = e.clientX;\n      var y = e.clientY;\n      var file = e.dataTransfer.files[0];\n\n      var URLObj = window.URL || window.webkitURL;\n      var source = URLObj.createObjectURL(file);\n\n      if (file.type.match('image.*')) {\n\n        var img = document.createElement(\"img\");\n\n        img.src = source;\n\n        if (document.caretPositionFromPoint) {\n          var pos = document.caretPositionFromPoint(x, y);\n          range = document.createRange();\n          range.setStart(pos.offsetNode, pos.offset);\n          range.collapse();\n          range.insertNode(img);\n        } else if (document.caretRangeFromPoint) {\n          range = document.caretRangeFromPoint(x, y);\n          range.insertNode(img);\n        }\n      }\n    },\n\n    updateButtons: function () {\n      var bold = document.queryCommandState(\"Bold\");\n      var italic = document.queryCommandState(\"Italic\");\n      var underline = document.queryCommandState(\"Underline\");\n\n      if (bold === true) {\n        $('[data-action=bold]').addClass('active');\n      } else {\n        $('[data-action=bold]').removeClass('active');\n      }\n\n      if (italic === true) {\n        $('[data-action=italic]').addClass('active');\n      } else {\n        $('[data-action=italic]').removeClass('active');\n      }\n\n      if (underline === true) {\n        $('[data-action=underline]').addClass('active');\n      } else {\n        $('[data-action=underline]').removeClass('active');\n      }\n    },\n\n    init: function (container) {\n      this.$container = $(container);\n\n      this.$input = this.$container.find('.js-input');\n      this.$btnAction = this.$container.find('.js-btn-action');\n\n      this.registerTriggers();\n      this.registerDropZone();\n      this.registerShortcuts();\n    },\n\n    registerTriggers: function () {\n      var self = this;\n\n      self.$btnAction.on('click', function () {\n        var action = $(this).attr('data-action');\n        document.execCommand(action);\n        app.simpleEditor.updateButtons();\n      });\n\n      self.$input.on('click', function () {\n        app.simpleEditor.updateButtons();\n      });\n\n      self.$input.on('focusin', function () {\n        self.$container.addClass('focused');\n      });\n\n      self.$input.on('focusout', function () {\n        self.$container.removeClass('focused');\n      });\n    },\n\n    registerDropZone: function () {\n      var dropZone = $(this.container).find('.js-input');\n      dropZone.on('dragover', app.simpleEditor.handleDrag, false);\n      dropZone.on('drop', app.simpleEditor.handleDrop, false);\n    },\n\n    registerShortcuts: function () {\n\n      app.simpleEditor.createShortcut('U', function () {\n        document.execCommand('underline');\n        app.simpleEditor.updateButtons();\n      });\n\n      app.simpleEditor.createShortcut('B', function () {\n        document.execCommand('bold');\n        app.simpleEditor.updateButtons();\n      });\n\n      app.simpleEditor.createShortcut('I', function () {\n        document.execCommand('italic');\n        app.simpleEditor.updateButtons();\n      });\n    }\n  };\n\n})();\n","app.studentDoubts = {\n  page: 1,\n\n  doubtsContainer: function () {\n    return $('#js-doubts-container');\n  },\n\n  form: function () {\n    return $('#js-student-doubts-form');\n  },\n\n  expandButton: function () {\n    return $('#js-expand-student-doubts-form');\n  },\n\n  hideButton: function () {\n    return $('#js-hide-student-doubts-form');\n  },\n\n  loadMoreButton: function () {\n    return $('#js-load-more-doubts');\n  },\n\n  loadDoubts: function (cb) {\n    var self = this;\n\n    $.ajax({\n      url: window.location.pathname + '/student_doubts/page/' + self.page,\n      method: 'GET',\n      data: {\n        per_page: 3\n      },\n      complete: function () {\n        if (typeof cb == 'function') {\n          cb();\n        }\n      }\n    })\n  },\n\n  init: function () {\n    var self = this;\n\n    if (self.doubtsContainer().length <= 0) return;\n\n    self.expandButton().on('click', function () {\n      self.expandButton().hide();\n      self.form().slideDown('fast');\n    });\n\n    self.hideButton().on('click', function () {\n      self.form().slideUp('fast', function () {\n        self.expandButton().fadeIn('fast');\n      });\n    });\n\n    self.loadMoreButton().on('click', function () {\n      self.page = self.page + 1;\n      var $btn = $(this);\n\n      $btn.attr('disabled', 'disabled');\n      self.loadDoubts(function () {\n        $btn.removeAttr('disabled');\n      });\n    });\n\n    self.loadDoubts();\n  }\n};\n","(function () {\n  'use strict';\n\n  app.changeTimeZone = function () {\n    $('.js-to-client-timezone').each(function (i, el) {\n      var $el = $(el);\n      var format = $el.data('format');\n      var zone = moment.tz.guess();\n      var time = $el.data('timezone');\n\n      $el.html(moment.tz(time, zone).format(format));\n    });\n\n    $(document).trigger('app:change:timezone');\n  };\n\n  // TODO: FIXME: Essa chamada é para funcionar no primeiro load. Não deveria\n  // ser assim, parece ser algum erro com a inserção de cod no tema\n  app.changeTimeZone();\n})();\n","(function () {\n  $(document).on('page:load', function () {\n    app.init();\n  });\n\n  $(document).on('page:partial-load', function () {\n    app.bindBlazy();\n  });\n\n  $(document).ready(function () {\n    app.init();\n  });\n})();\n"]}